{"version":3,"sources":["utils/polyfills/flat.js","reducers/trails.reducer.js","constants/trails.constants.js","reducers/station.reducer.js","constants/station.constants.js","reducers/multiChoiceActivity.reducer.js","constants/multiChoiceActivity.constants.js","reducers/activity.reducer.js","constants/activity.constants.js","constants/messages.constatns.js","reducers/messages.reducer.js","constants/score.constants.js","reducers/score.reducer.js","constants/chat.constants.js","reducers/chat.reducer.js","reducers/root.reducer.js","utils/transforms/entityArray.transforms.js","actions/station.action.js","selectors/trails.selectors.js","epics/trails.epics.js","selectors/station.selectors.js","selectors/activity.selectors.js","selectors/path.selectors.js","epics/station.epics.js","actions/activity.action.js","epics/activity.epics.js","actions/multiChoiceActivity.action.js","epics/multiChoiceActivity.epics.js","epics/imageActivity.epic.js","actions/messages.actions.js","epics/message.epic.js","epics/score.epics.js","actions/score.actions.js","actions/chat.actions.js","epics/chat.epic.js","utils/api.js","utils/inkjs/currentStory.js","epics/root.epic.js","createStore.js","assets/simple-forest.svg","components/noMatch.js","components/trailItem.js","components/dialog.js","components/trailsList.js","containers/trailslist.container.js","actions/trails.action.js","containers/stationView.container.js","components/stationInfo.js","containers/textActivity.container.js","components/textActivity.js","containers/imageActivity.container.js","components/imageActivity.js","components/multiChoiceActivity.js","containers/multiChoiceActivity.container.js","containers/activityWrapper.container.js","components/activityWrapper.js","components/trailView.js","containers/currentTrail.container.js","components/trailToolbar.component.js","components/ChatMessage.view.js","selectors/chat.selector.js","containers/chat.container.js","components/Chat.view.js","components/chatToolbar.component.js","components/toolbar.component.js","components/scoreCounter.js","containers/scoreCounter.container.js","components/messageDisplay.js","selectors/message.selector.js","containers/messages.container.js","components/mapIframe.view.js","components/app.js","serviceWorker.js","index.js","assets/correct.svg"],"names":["Array","prototype","flat","Object","defineProperty","value","depth","stack","this","item","push","initialState","loading","byUuid","trails","state","action","type","transformedTrails","error","undefined","current_trail","trailId","selected_trail","slugToUuid","stations","transformedStations","uuid","unlocked","multiChoiceActivityCase","answers","answerId","choosen","reveal","activity","transformedActivities","completed","activityType","multiChoiceActivity","messages","messageType","text","timestamp","hide","score","points","messageQueue","jsonFile","chatOptions","index","chat","concat","message","sender","options","map","o","json","trailsState","station","stationState","activityState","messagesState","scoreState","chatState","createRootReducer","history","combineReducers","router","connectRouter","normalizeEntityArray","trailsArray","res","trail","getSlugsEntityArray","array","entity","slug","loadStations","uuids","unlockStationFail","getTrailsList","createSelector","keys","key","selectCurrentTrailId","selectTrailsByUuid","getCurrentTrail","combineEpics","action$","state$","dep","pipe","ofType","fetchJSON","mergeMap","a","process","result","catchError","e","take","selectStations","getStationBySlug","selectActivity","selectActivityUuidBySlug","selectActivities","getActivity","getActivityBySlug","activities","getPath","trailUuid","console","log","accessible","ret","aUuid","unshift","getStationUnlockable","stationUuid","unlockIdx","indexOf","filter","val","idx","reduce","acc","cur","switchMap","completeActivity","of","toLoadArray","values","v","forEach","loadActivity","getResources","resourceUrls","revealAnswers","answersLeft","id","correctNotChoose","correct","wrongNotChoose","length","EMPTY","image","src","loadResource","addMessage","Date","now","hideMessage","messagesArray","trigger","delay","MESSAGE_TIME_IN_SECONDS","mS","messageSpec","genUuid","uuidv1","genEpic","addChatMessage","setChatOptions","getCurrentStory","story","option","Continue","currentChoices","ChooseChoiceIndex","initStory","url","filename","canContinue","params","mockFetchActivities","request","headers","Accept","method","window","fetch","response","data","s","includes","urls","requests","Promise","all","activityUrl","resposnes","r","currentStory","Story","rootEpic","trailsEpics","stationEpics","activityEpics","ImageActivityEpics","mulitChoiceActivityEpics","messageEpics","scoreEpic","chatEpic","configureEpicMiddleware","createEpicMiddleware","dependencies","createBrowserHistory","basename","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","_extends","assign","target","i","arguments","source","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","NoMatch","className","TrailItem","name","description","onStartTrail","onLoadStations","onClick","Dialog","open","tools","children","dialogClasses","TrailsList","onStartTrailAccept","onStartTrailCancel","errorDialog","dialogToolbar","selectedTrail","currentTrail","TrailsListContainer","connect","dispatch","StationView","match","stationSlug","onUnlockStation","unlockStationStart","TextActivity","onReadText","CorrectSymbol","alt","ImageActivity","onViewImage","MultiChoiceAnswer","classes","MultiChoiceActivity","onChooseAnswer","chooseAnswer","onAnswerClicked","question","Activity","activitySlug","TrailInfoView","mapDispatchToProps","CurrentTrail","currentStation","path","useRouteMatch","to","exact","component","ActivityWrapper","CurrentTrailToolbar","current","findIndex","elem","ChatMessageView","messageClasses","senderName","join","getChatMessages","getChatOptions","Chat","messagesEndRef","useRef","useEffect","scrollIntoView","block","behavior","m","ChatToolbar","onSendMessage","chooseChatOption","chooseFrom","ToolbarComponent","ScoreCounter","isActive","ScoreCounterComponent","messageTypeCss","getNewestMessages","sort","b","slice","Messages","onMessageRead","Map","App","clearButton","render","dummyFrontPage","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","rootReducer","preloadedState","persistConfig","storage","blacklist","persistReducer","epicMiddleware","middlewares","routerMiddleware","store","createStore","applyMiddleware","run","persistor","persistStore","configureStore","clearCachesButton","caches","names","delete","purge","reload","ReactDOM","document","getElementById","URL","href","origin","addEventListener","contentType","get","status","ready","unregister","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.60d91028.chunk.js","sourcesContent":["if (!Array.prototype.flat)\n{\n // eslint-disable-next-line \n    Object.defineProperty(Array.prototype, 'flat',\n    {\n        value: function(depth = 1, stack = [])\n        {\n            for (let item of this)\n            {\n                if (item instanceof Array && depth > 0)\n                {\n                    item.flat(depth - 1, stack);\n                }\n                else {\n                    stack.push(item);\n                }\n            }\n\n            return stack;\n        }\n    });\n}\n","import {\n  LOAD_TRAILS_SUCCESS,\n  LOAD_TRAILS_FAIL,\n  LOAD_TRAILS_START,\n  START_TRAIL_SUCCESS,\n  START_TRAIL_REJECT,\n  START_TRAIL_CANCEL\n} from '../constants/trails.constants.js'\n\nexport const initialState = {\n  loading: false,\n  byUuid: {}\n}\n\nfunction trails (state = initialState, action) {\n  switch (action.type) {\n    case LOAD_TRAILS_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case LOAD_TRAILS_FAIL:\n      return {\n        ...state,\n        loading: false\n      }\n    case LOAD_TRAILS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        byUuid: { ...action.transformedTrails }\n      }\n    case START_TRAIL_SUCCESS:\n      return {\n        ...state,\n        error: undefined,\n        current_trail: action.trailId\n      }\n    case START_TRAIL_REJECT:\n      return {\n        ...state,\n        error: {\n          selected_trail: action.trailId\n        }\n      }\n    case START_TRAIL_CANCEL:\n      return {\n        ...state,\n        error: undefined\n      }\n    default:\n      return state\n  }\n}\nexport default trails\n","export const LOAD_TRAILS_SUCCESS = 'LOAD_TRAILS_SUCCESS'\nexport const LOAD_TRAILS_FAIL = 'LOAD_TRAILS_FAIL'\nexport const LOAD_TRAILS_START = 'LOAD_TRAILS_START'\n\nexport const START_TRAIL_BEGIN = 'START_TRAIL_BEGIN'\nexport const START_TRAIL_SUCCESS = 'START_TRAIL_SUCCESS'\nexport const START_TRAIL_CANCEL = 'START_TRAIL_CANCEL'\nexport const START_TRAIL_REJECT = 'START_TRAIL_REJECT'\n","import {\n  LOAD_STATION_START,\n  LOAD_STATION_SUCCESS,\n  LOAD_STATION_FAIL,\n  UNLOCK_STATION_SUCCESS\n} from '../constants/station.constants.js'\n\nexport const initialState = {\n  byUuid: {},\n  slugToUuid: {},\n  loading: false\n}\n\nfunction stations (state = initialState, action) {\n  switch (action.type) {\n    case LOAD_STATION_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case LOAD_STATION_FAIL:\n      return {\n        ...state,\n        loading: false\n      }\n    case LOAD_STATION_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        byUuid: { ...state.byUuid, ...action.transformedStations },\n        slugToUuid: { ...state.slugToUuid, ...action.slugToUuid}\n      }\n    case UNLOCK_STATION_SUCCESS:\n      return {\n        ...state,\n        byUuid: {\n          ...state.byUuid,\n          [action.uuid]: {\n            ...state.byUuid[action.uuid],\n            unlocked: true\n          }\n        }\n      }\n    default:\n      return state\n  }\n}\n\nexport default stations\n","export const LOAD_STATION_START = 'LOAD_STATION_START'\nexport const LOAD_STATION_SUCCESS = 'LOAD_STATION_SUCCESS'\nexport const LOAD_STATION_FAIL = 'LOAD_STATION_FAIL'\n\nexport const UNLOCK_STATION_START = 'UNLOCK_STATION_START'\nexport const UNLOCK_STATION_FAIL = 'UNLOCK_STATION_FAIL'\nexport const UNLOCK_STATION_SUCCESS = 'UNLOCK_STATION_SUCCESS'\n","import {\n  CHOOSE_ANSWER,\n  REVEAL_ANSWERS\n} from '../constants/multiChoiceActivity.constants.js'\n\nexport const initialState = {\n  byUuid: {}\n}\n\nexport default function multiChoiceActivityCase (state = initialState, action) {\n  switch (action.type) {\n    case CHOOSE_ANSWER:\n      return {\n        ...state,\n        byUuid: {\n          ...state.byUuid,\n          [action.uuid]: {\n            ...state.byUuid[action.uuid],\n            answers: {\n              ...state.byUuid[action.uuid].answers,\n              [action.answerId]: {\n                ...state.byUuid[action.uuid].answers[action.answerId],\n                choosen: true\n              }\n            }\n          }\n        }\n      }\n    case REVEAL_ANSWERS:\n      return {\n        ...state,\n        byUuid: {\n          ...state.byUuid,\n          [action.uuid]: {\n            ...state.byUuid[action.uuid],\n            reveal: true\n          }\n        }\n      }\n    default:\n      return state\n  }\n}\n","export const CHOOSE_ANSWER = 'CHOOSE_ANSWER'\nexport const REVEAL_ANSWERS = 'REVEAL_ANSWERS'\n","import {\n  ACTIVITY_TYPE_MULTI_CHOICE,\n  LOAD_ACTIVITIES_START,\n  LOAD_ACTIVITIES_FAIL,\n  LOAD_ACTIVITIES_SUCCESS,\n  LOAD_RESOURCE_START,\n  LOAD_RESOURCE_SUCCESS,\n  LOAD_RESOURCE_FAIL,\n  COMPLETE_ACTIVITY\n} from '../constants/activity.constants.js'\n\nimport multiChoiceActivity from './multiChoiceActivity.reducer.js'\n\nexport const initialState = {\n  byUuid: {},\n  slugToUuid: {},\n  loading: false\n}\n\nexport default function activity (state = initialState, action) {\n  switch (action.type) {\n    case LOAD_ACTIVITIES_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case LOAD_ACTIVITIES_FAIL:\n      return {\n        ...state,\n        loading: false\n      }\n    case LOAD_ACTIVITIES_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        byUuid: {\n          ...state.byUuid,\n          ...action.transformedActivities\n        },\n        slugToUuid: {\n          ...state.slugToUuid,\n          ...action.slugToUuid\n        }\n      }\n    case LOAD_RESOURCE_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case LOAD_RESOURCE_FAIL:\n      return {\n        ...state,\n        loading: false\n      }\n    case LOAD_RESOURCE_SUCCESS:\n      return {\n        ...state,\n        loading: false\n      }\n    case COMPLETE_ACTIVITY:\n      return {\n        ...state,\n        byUuid: {\n          ...state.byUuid,\n          [action.uuid]: {\n            ...state.byUuid[action.uuid],\n            completed: true\n          }\n        }\n      }\n    default:\n      switch (action.activityType) {\n        case ACTIVITY_TYPE_MULTI_CHOICE:\n          return multiChoiceActivity(state, action)\n        default:\n          return state\n      }\n  }\n}\n","/* ACTIVITY TYPES */\nexport const ACTIVITY_TYPE_TEXT = 'ACTIVITY_TYPE_TEXT'\nexport const ACTIVITY_TYPE_IMAGE = 'ACTIVITY_TYPE_IMAGE'\nexport const ACTIVITY_TYPE_MULTI_CHOICE = 'ACTIVITY_TYPE_MULTI_CHOICE'\n\n/* ACITONS */\nexport const LOAD_ACTIVITIES_START = 'LOAD_ACTIVITIES_START'\nexport const LOAD_ACTIVITIES_FAIL = 'LOAD_ACTIVITIES_FAIL'\nexport const LOAD_ACTIVITIES_SUCCESS = 'LOAD_ACTIVITIES_SUCCESS'\n\nexport const COMPLETE_ACTIVITY = 'COMPLETE_ACTIVITY'\n\nexport const LOAD_RESOURCE_START = 'LOAC_RESOURCE_START'\nexport const LOAD_RESOURCE_SUCCESS = 'LOAC_RESOURCE_SUCCESS'\nexport const LOAD_RESOURCE_FAIL = 'LOAC_RESOURCE_FAIL'\n","/**\n * Message types (Log, error, points, etc)\n * @typedef {string} MessageType\n */\nexport const MESSAGE_TYPE_ERROR = 'MESSAGE_TYPE_ERROR'\nexport const MESSAGE_TYPE_LOG = 'MESSAGE_TYPE_LOG'\nexport const MESSAGE_TYPE_SUCCESS = 'MESSAGE_TYPE_SUCCESS'\n\n/**\n * Message params\n */\nexport const LAST_MESSAGE_COUNT = 3\nexport const MESSAGE_TIME_IN_SECONDS = 3\n\nexport const ADD_MESSAGE = 'ADD_MESSAGE'\nexport const HIDE_MESSAGE = 'HIDE_MESSAGE'\n\n\n","import {\n  ADD_MESSAGE,\n  HIDE_MESSAGE\n} from '../constants/messages.constatns.js'\n\nexport const initialState = {\n  byUuid: {}\n}\n\nexport default function messages (state = initialState, action) {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      return {\n        byUuid: {\n          ...state.byUuid,\n          [action.uuid]: {\n            messageType: action.messageType,\n            text: action.text,\n            timestamp: action.timestamp,\n            uuid: action.uuid\n          }\n        }\n      }\n    case HIDE_MESSAGE:\n      return {\n        byUuid: {\n          ...state.byUuid,\n          [action.uuid]: {\n            ...state.byUuid[action.uuid],\n            hide: true\n          }\n        }\n      }\n    default:\n      return state\n  }\n}\n","export const ADD_POINTS = 'ADD_POINTS'\nexport const RESET_SCORE = 'RESET_SCORE'\n","import {\n  ADD_POINTS,\n  RESET_SCORE\n} from '../constants/score.constants.js'\n\nexport const initialState = {\n  score: 0\n}\n\nexport default function score (state = initialState, action) {\n  switch (action.type) {\n    case ADD_POINTS:\n      return {\n        ...state,\n        score: state.score + action.points\n      }\n    case RESET_SCORE:\n      return {\n        ...state,\n        score: 0\n      }\n    default:\n      return state\n  }\n}\n","export const ADD_CHAT_MESSAGE = 'ADD_CHAT_MESSAGE'\nexport const CHOOSE_CHAT_OPTION = 'CHOOSE_CHAT_OPTION'\nexport const SET_CHAT_OPTIONS = 'SET_CHAT_OPTIONS'\n\nexport const SENDER_IS_PLAYER = 'SENDER_IS_PLAYER'\nexport const SENDER_IS_SENSI = 'SENDER_IS_SENSI'\n\nexport const LOAD_INK_JSON_START = 'LOAD_INK_JSON_START'\nexport const LOAD_INK_JSON_SUCCESS = 'LOAD_INK_JSON_SUCCESS'\nexport const LOAD_INK_JSON_FAIL = 'LOAD_INK_JSON_FAIL'\n","import {\n  ADD_CHAT_MESSAGE,\n  SET_CHAT_OPTIONS,\n  LOAD_INK_JSON_START,\n  LOAD_INK_JSON_SUCCESS,\n  LOAD_INK_JSON_FAIL\n} from '../constants/chat.constants.js'\n\nexport const initialState = {\n  messageQueue: [],\n  jsonFile: undefined,\n  loading: false,\n  chatOptions: [{text: 'Start', index: -1}]\n}\n\nexport default function chat (state = initialState, action) {\n  switch (action.type) {\n    case ADD_CHAT_MESSAGE:\n      return {\n        ...state,\n        messageQueue: state.messageQueue.concat([{\n          message: action.message,\n          sender: action.sender\n        }])\n      }\n    case SET_CHAT_OPTIONS:\n      return {\n        ...state,\n        chatOptions: action.options.map(o => { return { ...o } })\n      }\n    case LOAD_INK_JSON_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case LOAD_INK_JSON_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        jsonFile: action.json\n      }\n    case LOAD_INK_JSON_FAIL:\n      return {\n        ...state,\n        loading: false,\n        jsonFile: undefined\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport trails, { initialState as trailsState } from './trails.reducer.js'\nimport station, { initialState as stationState } from './station.reducer.js'\nimport activity, { initialState as activityState } from './activity.reducer.js'\nimport messages, { initialState as messagesState } from './messages.reducer.js'\nimport score, { initialState as scoreState } from './score.reducer.js'\nimport chat, { initialState as chatState } from './chat.reducer.js'\n\nexport const initialState = {\n  trails: trailsState,\n  station: stationState,\n  activity: activityState,\n  messages: messagesState,\n  score: scoreState,\n  chat: chatState\n}\n\nexport default function createRootReducer (history) {\n  return combineReducers({\n    router: connectRouter(history),\n    trails,\n    station,\n    activity,\n    messages,\n    score,\n    chat\n  })\n}\n","export function normalizeEntityArray (trailsArray) {\n  const res = {}\n  for (const trail of trailsArray) {\n    res[trail.uuid] = trail\n  }\n  return res\n}\n\nexport function getSlugsEntityArray (array) {\n  const res = {}\n  for (const entity of array) {\n    res[entity.slug] = entity.uuid\n  }\n  return res\n}\n","import {\n  LOAD_STATION_START,\n  LOAD_STATION_SUCCESS,\n  LOAD_STATION_FAIL,\n  UNLOCK_STATION_START,\n  UNLOCK_STATION_SUCCESS,\n  UNLOCK_STATION_FAIL\n} from '../constants/station.constants.js'\n\n/**\n * @param {Array<string>} uuids - Array of uuids of the stations that should be loaded\n */\nexport function loadStations (uuids) {\n  return {\n    type: LOAD_STATION_START,\n    uuids\n  }\n}\n\n/**\n * @param {Object} transformedStations - loaded Stations\n */\nexport function loadStationsSuccess (transformedStations, slugToUuid) {\n  return {\n    type: LOAD_STATION_SUCCESS,\n    transformedStations,\n    slugToUuid\n  }\n}\n\n/**\n */\nexport function loadStationsFail () {\n  return {\n    type: LOAD_STATION_FAIL,\n  }\n}\n\n/**\n * @param {string} uuid - uuid of the Station to unlock\n */\nexport function unlockStationStart (uuid) {\n  return {\n    type: UNLOCK_STATION_START,\n    uuid\n  }\n}\n\n\n/**\n * @param {string} uuid - uuid of the Station to unlock\n */\nexport function unlockStationSuccess (uuid) {\n  return {\n    type: UNLOCK_STATION_SUCCESS,\n    uuid\n  }\n}\n\n/**\n * @param {string} uuid - uuid of the Station to unlock\n */\nexport function unlockStationFail (uuid) {\n  return {\n    type: UNLOCK_STATION_FAIL,\n    uuid\n  }\n}\n\n","import { createSelector } from 'reselect'\n\nfunction selectTrailsList (state) {\n  return Object.keys(state.trails.byUuid).map((key, index) => {\n    return state.trails.byUuid[key]\n  })\n}\n\nexport const getTrailsList = createSelector(\n  [selectTrailsList],\n  (trails) => trails\n)\n\nexport function selectCurrentTrailId (state) {\n  return state.trails.current_trail\n}\n\nexport function selectTrailsByUuid (state) {\n  return state.trails.byUuid\n}\n\nexport function selectCurrentTrailsStation (state) {\n  return state.trails.currentStation\n}\n\nexport const getCurrentTrail = createSelector(\n  [selectTrailsByUuid, selectCurrentTrailId],\n  (trails, uuid) => trails[uuid]\n)\n\n","import { take, mergeMap, catchError, map } from 'rxjs/operators'\nimport { ofType, combineEpics } from 'redux-observable'\nimport { normalizeEntityArray } from '../utils/transforms/entityArray.transforms.js'\n\nimport {\n  LOAD_TRAILS_START,\n  LOAD_TRAILS_SUCCESS,\n  LOAD_TRAILS_FAIL,\n  START_TRAIL_BEGIN,\n  START_TRAIL_SUCCESS,\n  START_TRAIL_REJECT\n} from '../constants/trails.constants.js'\n\nimport { loadStations } from '../actions/station.action.js'\n\nimport { LOAD_ACTIVITIES_SUCCESS } from '../constants/activity.constants.js'\n\nimport { getCurrentTrail } from '../selectors/trails.selectors.js'\n\nimport { push } from 'connected-react-router'\n\nexport const loadTrailsEpic = (action$, state$, { fetchJSON }) => action$.pipe(\n  ofType(LOAD_TRAILS_START),\n  mergeMap(async action => {\n    const url = process.env.PUBLIC_URL + '/json/trailslist.json'\n    const result = await fetchJSON(url)\n    return {\n      type: LOAD_TRAILS_SUCCESS,\n      transformedTrails: normalizeEntityArray(result)\n    }\n  }),\n  catchError((e) => {\n    return [\n      {\n        type: LOAD_TRAILS_FAIL\n      }\n    ]\n  })\n)\n\nexport const startTrailEpic = (action$, state$, dep) => action$.pipe(\n  ofType(START_TRAIL_BEGIN),\n  map(action => {\n    if (state$.value.trails.current_trail !== undefined) {\n      return {\n        type: START_TRAIL_REJECT,\n        trailId: action.trailId\n      }\n    }\n    return {\n      type: START_TRAIL_SUCCESS,\n      trailId: action.trailId\n    }\n  })\n  /* ,\n   catchError((e) => {\n    console.error(e)\n    return of({\n      type: LOAD_TRAILS_FAIL,\n    })\n  }) */\n)\n\nexport const gotoCurrentStartedTrail = (action$, state$, dep) => action$.pipe(\n  ofType(START_TRAIL_SUCCESS),\n  mergeMap(action => action$.pipe(\n    ofType(LOAD_ACTIVITIES_SUCCESS),\n    map(action => {\n      return push('/mytrail')\n    }),\n    take(1)\n  ))\n)\n\nexport const startTrailSuccessEpic = (action$, state$, dep) => action$.pipe(\n  ofType(START_TRAIL_SUCCESS),\n  mergeMap((action) => {\n    const currentTrail = getCurrentTrail(state$.value)\n    return [loadStations(currentTrail.stations)]\n  })\n)\n\nexport default combineEpics(\n  startTrailEpic,\n  loadTrailsEpic,\n  startTrailSuccessEpic,\n  gotoCurrentStartedTrail\n)\n","import { createSelector } from 'reselect'\n\nexport function selectStation (state, { uuid }) {\n  return state.station.byUuid[uuid]\n}\n\n\nexport const getStation = createSelector(\n  [selectStation],\n  (station) => station\n)\n\nexport function selectStations (state) {\n  return state.station.byUuid\n}\n\nfunction selectStationUuidBySlug (state, { slug }) {\n  return state.station.slugToUuid[slug]\n}\n\nexport const getStationBySlug = createSelector(\n  [selectStations, selectStationUuidBySlug],\n  (stations, uuid) => stations[uuid]\n)\n","import { createSelector } from 'reselect'\n\nexport function selectActivity (state, { uuid }) {\n  return state.activity.byUuid[uuid]\n}\n\nexport function selectActivityUuidBySlug (state, { slug }) {\n  return state.activity.slugToUuid[slug]\n}\n\nexport function selectActivities (state) {\n  return state.activity.byUuid\n}\n\nexport const getActivity = createSelector(\n  [selectActivity],\n  (activity) => activity\n)\n\nexport const getActivityType = createSelector(\n  [selectActivity],\n  (activity) => activity.activityType\n)\n\nexport const getActivityBySlug = createSelector(\n  [selectActivities, selectActivityUuidBySlug],\n  (activities, uuid) => activities[uuid]\n)\n\nexport const getActivityTypeBySlug = createSelector(\n  [selectActivities, selectActivityUuidBySlug],\n  (activities, uuid) => activities[uuid].activityType\n)\n","import { createSelector } from 'reselect'\nimport { selectCurrentTrailId, selectTrailsByUuid } from './trails.selectors.js'\nimport { selectStations } from './station.selectors.js'\nimport { selectActivities } from './activity.selectors.js'\n\nexport const getPath = createSelector(\n  [\n    selectCurrentTrailId, \n    selectTrailsByUuid, \n    selectStations, \n    selectActivities\n  ],\n  (trailUuid, trails, stations, activities) => {\n    if(!trailUuid) return []\n    console.log(\"BUILD PATH\")\n    let accessible = trails[trailUuid].stations\n      .map(\n        (uuid) => {\n          let ret = [ \n            stations[uuid].slug \n          ]\n          if(stations[uuid].unlocked) {\n            ret.push(...(stations[uuid].activities.map(\n              (aUuid) => stations[uuid].slug + \"/\" + activities[aUuid].slug\n            )))\n          }\n          return ret\n        }\n      )\n      .flat()\n    accessible.unshift(\"\")\n\n   /* let unaccessible = trails[trailUuid].stations\n      .filter((val, idx) => idx > currentStation)\n      .map(\n        (uuid) => [ \n          stations[uuid].slug,\n          ...(stations[uuid].activities.map(\n            (aUuid) => stations[uuid].slug + \"/\" + activities[aUuid].slug\n          ))\n        ]\n      )\n      .flat()\n\n    if(unaccessible.length > 0){\n      accessible.push(unaccessible.shift())\n    }*/\n    return accessible\n  }\n)\n\nfunction selectStationUuid ( state, {uuid} ) {\n  return uuid\n}\n\nexport const getStationUnlockable = createSelector(\n  [\n    selectStationUuid,\n    selectCurrentTrailId, \n    selectTrailsByUuid, \n    selectStations, \n    selectActivities\n  ],\n  (stationUuid, trailUuid, trails, stations, activities) => {\n    if(!trailUuid) return false\n    \n    let unlockIdx = trails[trailUuid].stations.indexOf(stationUuid)\n    if(unlockIdx < 0) return false\n    return trails[trailUuid].stations\n      .filter((val, idx) => idx < unlockIdx)\n      .map(\n        (uuid) => stations[uuid].activities.map(\n          (aUuid) => (activities[aUuid].completed || false)\n        )\n      )\n      .flat()\n      .reduce((acc, cur) => acc && cur, true)\n\n  }\n)\n","import { mergeMap, catchError, switchMap } from 'rxjs/operators'\nimport { ofType, combineEpics } from 'redux-observable'\nimport { normalizeEntityArray, getSlugsEntityArray } from '../utils/transforms/entityArray.transforms.js'\n\nimport {\n  LOAD_STATION_START,\n  UNLOCK_STATION_START\n} from '../constants/station.constants.js'\n\nimport { getStationUnlockable } from '../selectors/path.selectors.js'\n\nimport {\n  loadStationsSuccess,\n  loadStationsFail,\n  unlockStationFail,\n  unlockStationSuccess\n} from '../actions/station.action.js'\n\nexport function loadStationsEpic (action$, state$, { fetchJSON }) {\n  return action$.pipe(\n    ofType(LOAD_STATION_START),\n    mergeMap(async action => {\n      const url = process.env.PUBLIC_URL + '/json/stationlist.json'\n      const result = await fetchJSON(url, { uuids: action.uuids })\n      return loadStationsSuccess(normalizeEntityArray(result), getSlugsEntityArray(result))\n    }),\n    catchError((e) => {\n      return [\n        loadStationsFail()\n      ]\n    })\n  )\n}\n\nexport function unlockStationEpic (action$, state$) {\n  return action$.pipe(\n    ofType(UNLOCK_STATION_START),\n    switchMap((action) => {\n      if (getStationUnlockable(state$.value, { uuid: action.uuid })) {\n        return [\n          unlockStationSuccess(action.uuid)\n        ]\n      }\n      return [\n        unlockStationFail(action.uuid)\n      ]\n    })\n  )\n}\n\nexport default combineEpics(\n  loadStationsEpic,\n  unlockStationEpic\n)\n","import {\n  LOAD_ACTIVITIES_START,\n  LOAD_ACTIVITIES_SUCCESS,\n  COMPLETE_ACTIVITY,\n  LOAD_RESOURCE_START,\n  LOAD_RESOURCE_SUCCESS,\n  LOAD_RESOURCE_FAIL\n} from '../constants/activity.constants.js'\n\n/**\n * @param {String[]} uuids - uuids of activities to load\n */\nexport function loadActivity (uuids) {\n  return {\n    type: LOAD_ACTIVITIES_START,\n    uuids\n  }\n}\n\n/**\n * @param {Object} transformedActivities - Activities transformed into a key value pair Object\n */\nexport function loadActivitySuccess (transformedActivities, slugToUuid) {\n  return {\n    type: LOAD_ACTIVITIES_SUCCESS,\n    transformedActivities,\n    slugToUuid\n  }\n}\n\n/**\n * @param {string} uuid - the uuid of the activity\n */\nexport function completeActivity (uuid, points = 0) {\n  return {\n    type: COMPLETE_ACTIVITY,\n    uuid,\n    points\n  }\n}\n\n/** Load Resources for caching **/\n\n/**\n * @param {String[]} uuids - uuids of activities that have resoruces\n * @param [String[]] resorces - url of resources\n */\nexport function loadResource (uuids, resourceUrls) {\n  return {\n    type: LOAD_RESOURCE_START,\n    uuids,\n    resourceUrls\n  }\n}\n\n/**\n * @param {String[]} uuids - uuids of activities that have resoruces\n */\nexport function loadResourceSuccess (uuids) {\n  return {\n    type: LOAD_RESOURCE_SUCCESS,\n    uuids\n  }\n}\n\n/**\n */\nexport function loadResourceFail () {\n  return {\n    type: LOAD_RESOURCE_FAIL,\n  }\n}\n","import {\n  LOAD_ACTIVITIES_START,\n  LOAD_ACTIVITIES_FAIL,\n  LOAD_RESOURCE_START\n} from '../constants/activity.constants.js'\n\nimport {\n  LOAD_STATION_SUCCESS\n} from '../constants/station.constants.js'\n\nimport {\n  loadActivitySuccess,\n  loadActivity,\n  loadResourceFail,\n  loadResourceSuccess\n} from '../actions/activity.action.js'\n\n\nimport { mergeMap, catchError, map } from 'rxjs/operators'\nimport { of } from 'rxjs'\nimport { ofType, combineEpics } from 'redux-observable'\nimport { normalizeEntityArray, getSlugsEntityArray } from '../utils/transforms/entityArray.transforms.js'\n\nexport function loadActivitiesEpic (action$, state$, { fetchJSON }) {\n  return action$.pipe(\n    ofType(LOAD_ACTIVITIES_START),\n    mergeMap(async action => {\n      const url = process.env.PUBLIC_URL + '/json/activities.json'\n      const result = await fetchJSON(url, { uuids: action.uuids })\n      return loadActivitySuccess(normalizeEntityArray(result), getSlugsEntityArray(result))\n    }),\n    catchError((e) => {\n      return of({\n        type: LOAD_ACTIVITIES_FAIL\n      })\n    })\n  )\n}\n\nexport function startLoadActivitiesEpic (action$, state$, dep) {\n  return action$.pipe(\n    ofType(LOAD_STATION_SUCCESS),\n    map(action => {\n      const toLoadArray = Object.values(action.transformedStations)\n        .map((v) => v.activities)\n      const uuids = []\n      toLoadArray.forEach(e => uuids.push(...e))\n      return loadActivity(uuids)\n    })\n  )\n}\n\nexport function loadActivitiesResourceEpic (action$, state$, { getResources }) {\n  return action$.pipe(\n    ofType(LOAD_RESOURCE_START),\n    mergeMap(async action => {\n      await getResources(action.resourceUrls)\n      return loadResourceSuccess(action.uuids)\n    }),\n    catchError((e) => {\n      return of(loadResourceFail())\n    })\n\n  )\n}\nexport default combineEpics(\n  loadActivitiesEpic,\n  startLoadActivitiesEpic,\n  loadActivitiesResourceEpic \n)\n","import {\n  CHOOSE_ANSWER,\n  REVEAL_ANSWERS\n} from '../constants/multiChoiceActivity.constants.js'\n\nimport { ACTIVITY_TYPE_MULTI_CHOICE } from '../constants/activity.constants.js'\n\n/**\n * @param {string} uuid - the uuid of the multiChoiceActivity\n * @param {string} answerId - the id of the answer\n */\nexport function chooseAnswer (uuid, answerId) {\n  return {\n    type: CHOOSE_ANSWER,\n    activityType: ACTIVITY_TYPE_MULTI_CHOICE,\n    uuid,\n    answerId\n  }\n}\n\n/**\n * @param {string} uuid - the uuid of the multiChoiceActivity\n */\nexport function revealAnswers (uuid) {\n  return {\n    type: REVEAL_ANSWERS,\n    activityType: ACTIVITY_TYPE_MULTI_CHOICE,\n    uuid\n  }\n}\n\n","import { switchMap } from 'rxjs/operators'\nimport { EMPTY } from 'rxjs'\nimport { ofType, combineEpics } from 'redux-observable'\n\nimport {\n  CHOOSE_ANSWER\n} from '../constants/multiChoiceActivity.constants.js'\n\nimport { revealAnswers } from '../actions/multiChoiceActivity.action.js'\nimport { completeActivity } from '../actions/activity.action.js'\n\nexport function revealAnswersEpic (action$, state$) {\n  return action$.pipe(\n    ofType(CHOOSE_ANSWER),\n    switchMap((action) => {\n      const activity = state$.value.activity.byUuid[action.uuid]\n      const answers = Object.values(activity.answers)\n      const answersLeft = answers.filter((a) => !a.choosen && a.id !== action.answerId)\n\n      const correctNotChoose = answersLeft.filter((a) => a.correct)\n      const wrongNotChoose = answersLeft.filter((a) => !a.correct)\n\n      if (correctNotChoose.length < 1) {\n        return [\n          revealAnswers(action.uuid),\n          completeActivity(action.uuid, activity.points)\n        ]\n      }\n      if (wrongNotChoose.length < 1) {\n        return [\n          revealAnswers(action.uuid),\n          completeActivity(action.uuid)\n        ]\n      }\n      return EMPTY\n    })\n  )\n}\n\nexport default combineEpics(\n  revealAnswersEpic\n)\n","import { ofType, combineEpics } from 'redux-observable'\nimport { map } from 'rxjs/operators'\nimport { filter } from 'rxjs/operators';\n\nimport {\n  LOAD_ACTIVITIES_SUCCESS,\n  ACTIVITY_TYPE_IMAGE \n} from '../constants/activity.constants.js'\n\nimport {\n  loadResource\n} from '../actions/activity.action.js'\n\n/**\n * load images for caching \n * detect image activities and dispatch loadResource Action\n */\nexport function detectImageResourceEpic (action$, state$) {\n  return action$.pipe(\n    ofType(LOAD_ACTIVITIES_SUCCESS),\n    filter((action) => {\n      const activities = action.transformedActivities\n      for(let key in activities){\n        if(activities[key].activityType === ACTIVITY_TYPE_IMAGE){\n          return true\n        }\n      }\n      return false\n    }),\n    map(action => {\n      let activities = Object.values(action.transformedActivities)\n      activities = activities.filter(a => {\n        return a.activityType === ACTIVITY_TYPE_IMAGE\n      })\n\n      const resourceUrls = activities.map((a) => a.image.src)\n      const uuids = activities.map((a) => a.uuid)\n      return loadResource(uuids, resourceUrls)\n    })\n  )\n}\n\nexport default combineEpics(\n  detectImageResourceEpic\n)\n","import {\n  ADD_MESSAGE,\n  HIDE_MESSAGE\n} from '../constants/messages.constatns.js'\n\n/*\n * @param {MessageType} messageType\n * @param {String} text\n * @param {String} uuid\n * @param {number} timestamp - for injecting a timestamp if needed\n * @return {Object}\n */\nexport function addMessage (messageType, text, uuid, timestamp = null) {\n  if (timestamp === null){\n    timestamp = Date.now()\n  }\n  return {\n    type: ADD_MESSAGE,\n    messageType,\n    text,\n    timestamp,\n    uuid\n  }\n}\n\n/*\n * @param {String} uuid\n * @return {Object}\n */\nexport function hideMessage (uuid) {\n  return {\n    type: HIDE_MESSAGE,\n    uuid\n  }\n}\n","import { map, switchMap, delay } from 'rxjs/operators'\nimport { of } from 'rxjs'\nimport { ofType, combineEpics } from 'redux-observable'\nimport uuidv1 from 'uuid/v1'\n\nimport {\n  LOAD_STATION_FAIL,\n  UNLOCK_STATION_FAIL,\n  UNLOCK_STATION_SUCCESS\n} from '../constants/station.constants.js'\n\nimport {\n  LOAD_TRAILS_FAIL\n} from '../constants/trails.constants.js'\n\nimport {\n  ADD_MESSAGE,\n  MESSAGE_TYPE_ERROR,\n  MESSAGE_TYPE_LOG,\n  MESSAGE_TYPE_SUCCESS,\n  MESSAGE_TIME_IN_SECONDS\n} from '../constants/messages.constatns.js'\n\nimport { addMessage, hideMessage } from '../actions/messages.actions.js'\n\nconst messagesArray = [\n  {\n    trigger: LOAD_STATION_FAIL,\n    type: MESSAGE_TYPE_ERROR,\n    message: 'Fehler: Die Stadtionen konnten nicht geladen werden'\n  },\n  {\n    trigger: UNLOCK_STATION_FAIL,\n    type: MESSAGE_TYPE_ERROR,\n    message: 'Diese Stadtion kann noch nich freigeschaltet werden'\n  },\n  {\n    trigger: UNLOCK_STATION_SUCCESS,\n    type: MESSAGE_TYPE_SUCCESS,\n    message: 'Station erfolgreich freigeschaltet'\n  },\n  {\n    trigger: LOAD_TRAILS_FAIL,\n    type: MESSAGE_TYPE_ERROR,\n    message: 'Fehler: Die Trails konnten nicht geladen werden.'\n  }\n]\n\nexport function genEpic (messageSpec, genUuid = uuidv1) {\n  return (action$, state$) => action$.pipe(\n    ofType(messageSpec.trigger),\n    map((action) => {\n      const uuid = genUuid()\n      return addMessage(messageSpec.type, messageSpec.message, uuid)\n    })\n  )\n}\n\nexport function hideMessageEpic (action$) {\n  return action$.pipe(\n    ofType(ADD_MESSAGE),\n    switchMap(action => {\n      return of(hideMessage(action.uuid)).pipe(\n        delay(MESSAGE_TIME_IN_SECONDS * 1000)\n      )\n    })\n  )\n}\n\nexport default combineEpics(hideMessageEpic, ...messagesArray.map(mS => genEpic(mS)))\n","import { map, switchMap } from 'rxjs/operators'\nimport { ofType, combineEpics } from 'redux-observable'\nimport { of, EMPTY } from 'rxjs'\nimport uuidv1 from 'uuid/v1'\n\nimport {\n  START_TRAIL_SUCCESS\n} from '../constants/trails.constants.js'\n\nimport {\n  ADD_POINTS\n} from '../constants/score.constants.js'\n\nimport {\n  resetScore,\n  addPoints\n} from '../actions/score.actions.js'\n\nimport {\n  MESSAGE_TYPE_SUCCESS\n} from '../constants/messages.constatns.js'\n\nimport {\n  COMPLETE_ACTIVITY\n} from '../constants/activity.constants.js'\n\nimport { addMessage } from '../actions/messages.actions.js'\n\nexport function resetScoreEpic (action$) {\n  return action$.pipe(\n    ofType(START_TRAIL_SUCCESS),\n    map(action => resetScore())\n  )\n}\n\nexport function addPointsEpic (action$) {\n  return action$.pipe(\n    ofType(COMPLETE_ACTIVITY),\n    switchMap(action => {\n      if (action.points && action.points > 0) {\n        return of(addPoints(action.points))\n      }\n      return EMPTY\n    })\n  )\n}\n\n// Maybe move this to message epics?!\nexport function scoreMessageEpic (action$) {\n  return action$.pipe(\n    ofType(ADD_POINTS),\n    map(action => {\n      const text = `+${action.points} Punkte`\n      const uuid = uuidv1()\n      return addMessage(\n        MESSAGE_TYPE_SUCCESS,\n        text,\n        uuid\n      )\n    }\n    )\n  )\n}\n\nexport default combineEpics(\n  resetScoreEpic,\n  scoreMessageEpic,\n  addPointsEpic\n)\n","import {\n  ADD_POINTS,\n  RESET_SCORE\n} from '../constants/score.constants.js'\n\nexport function addPoints (points) {\n  return {\n    type: ADD_POINTS,\n    points\n  }\n}\n\nexport function resetScore () {\n  return {\n    type: RESET_SCORE\n  }\n}\n","import {\n  ADD_CHAT_MESSAGE,\n  CHOOSE_CHAT_OPTION,\n  SET_CHAT_OPTIONS,\n  LOAD_INK_JSON_START,\n  LOAD_INK_JSON_SUCCESS,\n  LOAD_INK_JSON_FAIL\n} from '../constants/chat.constants.js'\n\n/**\n * @param {string} message - message to display\n * @param {string} sender - sender identification\n */\nexport function addChatMessage (message, sender){\n  return {\n    type: ADD_CHAT_MESSAGE,\n    message,\n    sender\n  }\n}\n\n/**\n * @param {Object[]} options \n */\nexport function setChatOptions(options){\n  return {\n    type: SET_CHAT_OPTIONS,\n    options\n  }\n}\n\n/**\n * @param {number} option - index of the choose option\n */\nexport function chooseChatOption(option){\n  return {\n    type: CHOOSE_CHAT_OPTION,\n    option\n  }\n}\n\n/**\n * @param {string} filename  \n */\nexport function loadInkJsonStart(filename){\n  return {\n    type: LOAD_INK_JSON_START,\n    filename\n  }\n}\n\n/**\n * @param {string} filename  \n * @param {Object} json\n */\nexport function loadInkJsonSuccess(filename, json){\n  return {\n    type: LOAD_INK_JSON_SUCCESS,\n    filename,\n    json\n  }\n}\n\n/**\n * @param {string} filename  \n */\nexport function loadInkJsonFail(filename){\n  return {\n    type: LOAD_INK_JSON_FAIL,\n    filename\n  }\n}\n","import { ofType, combineEpics } from 'redux-observable'\nimport { of, EMPTY } from 'rxjs'\nimport { map, switchMap, catchError, delay } from 'rxjs/operators'\n\nimport {\n  CHOOSE_CHAT_OPTION,\n  LOAD_INK_JSON_START,\n  ADD_CHAT_MESSAGE,\n  SENDER_IS_PLAYER,\n  SENDER_IS_SENSI\n} from '../constants/chat.constants.js'\n\nimport {\n  addChatMessage,\n  loadInkJsonSuccess,\n  loadInkJsonFail,\n  setChatOptions,\n} from '../actions/chat.actions.js'\n\n/**\n */\nexport function sendChatMessage (action$, state$, { getCurrentStory }) {\n  return action$.pipe(\n    ofType(CHOOSE_CHAT_OPTION),\n    switchMap(action => {\n      \n      const story = getCurrentStory()\n\n      if(action.option < 0){\n        return of(addChatMessage(story.Continue(), SENDER_IS_SENSI))\n      }\n\n      if (story.currentChoices.length > 0) {\n        story.ChooseChoiceIndex(action.option)\n      }\n\n      return of(addChatMessage(story.Continue(), SENDER_IS_PLAYER))\n    })\n  )\n}\n\nexport function getNextOptionOrContinue (action$, state$, { getCurrentStory }) {\n  return action$.pipe(\n    ofType(ADD_CHAT_MESSAGE),\n    switchMap(action => {\n      const story = getCurrentStory()\n\n      if (story.canContinue) {\n        return of(addChatMessage(story.Continue(), SENDER_IS_SENSI)).pipe(\n          delay(1000)\n        )\n      } else {\n        if (story.currentChoices.length > 0) {\n          const options = story.currentChoices.map(o => {\n            return {\n              text: o.text,\n              index: o.index\n            }\n          })\n          return of(setChatOptions(options))\n        }\n        return of(setChatOptions([]))\n      }\n    })\n  )\n}\n\nexport function loadInkJsonEpic (action$, state$, { fetchJSON, initStory }) {\n  return action$.pipe(\n    ofType(LOAD_INK_JSON_START),\n    switchMap(async action => {\n      const url = process.env.PUBLIC_URL + '/json/' + action.filename\n      const result = await fetchJSON(url)\n      initStory(result)\n      return loadInkJsonSuccess(action.filename, result)\n    }),\n    catchError((e) => {\n      return [\n        loadInkJsonFail()\n      ]\n    })\n  )\n}\n\n\nexport default combineEpics(\n  sendChatMessage,\n  loadInkJsonEpic,\n  getNextOptionOrContinue\n)\n","/**\n * @throws JSON Parse\n * @param {string} url - url to fetch json data from\n * @return {Object} - JS Object from JSON files\n */\nexport async function fetchJSON (url, params = {}) {\n  /** MOCK LOAD ACTIVITES */\n  if (url === process.env.PUBLIC_URL + '/json/activities.json') {\n    return mockFetchActivities(params)\n  }\n  const request = {\n    headers: {\n      Accept: 'application/json'\n    },\n    method: 'GET'\n  }\n  const response = await window.fetch(url, request)\n  const data = await response.json()\n  /** MOCK only loading trails stations. Needs some kind of api */\n  if ('uuids' in params) {\n    return data.filter(s => params.uuids.includes(s.uuid))\n  }\n  return data\n}\n\nexport async function getResources (urls, params = {}) {\n  const request = {\n    method: 'GET'\n  }\n  const requests = urls.map((url) => window.fetch(url, {...request}))\n  await Promise.all(requests)\n\n  return true;\n}\n\nasync function mockFetchActivities ({ uuids }) {\n  const request = {\n    headers: {\n      Accept: 'application/json'\n    },\n    method: 'GET'\n  }\n  const activities = [\n    process.env.PUBLIC_URL + '/json/textActivity.json',\n    process.env.PUBLIC_URL + '/json/imageActivity.json',\n    process.env.PUBLIC_URL + '/json/multiChoiceActivity.json'\n  ]\n  const resposnes = await Promise.all(\n    activities.map(activityUrl => window.fetch(activityUrl, request))\n  )\n  const data = await Promise.all(\n    resposnes.map(r => r.json())\n  )\n\n  return data.flat().filter(s => uuids.includes(s.uuid))\n}\n","// import { Story } from 'inkjs'\nimport { Story } from '../../../node_modules/inkjs/dist/ink.js'\n\n\nlet currentStory\n\nexport function initStory (json) {\n  currentStory = new Story(json)\n  return currentStory\n}\n\nexport function getCurrentStory () {\n  return currentStory\n}\n","import { combineEpics, createEpicMiddleware } from 'redux-observable'\nimport trailsEpics from './trails.epics.js'\nimport stationEpics from './station.epics.js'\nimport activityEpics from './activity.epics.js'\nimport mulitChoiceActivityEpics from './multiChoiceActivity.epics.js'\nimport ImageActivityEpics from './imageActivity.epic.js'\nimport messageEpics from './message.epic.js'\nimport scoreEpic from './score.epics.js'\nimport chatEpic from './chat.epic.js'\n\n/* DEPENDENCIES */\nimport { fetchJSON, getResources } from '../utils/api.js'\nimport { getCurrentStory, initStory } from '../utils/inkjs/currentStory.js'\n\nconst rootEpic = combineEpics(\n  trailsEpics,\n  stationEpics,\n  activityEpics,\n  ImageActivityEpics,\n  mulitChoiceActivityEpics,\n  messageEpics,\n  scoreEpic,\n  chatEpic\n)\n\nexport const configureEpicMiddleware = () => createEpicMiddleware({\n  dependencies: {\n    fetchJSON,\n    getResources,\n    getCurrentStory,\n    initStory\n  }\n})\n\nexport default rootEpic\n","import { createBrowserHistory } from 'history'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport createRootReducer, { initialState } from './reducers/root.reducer.js'\nimport rootEpic, { configureEpicMiddleware } from './epics/root.epic.js'\n\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n})\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\n\nexport default function configureStore (preloadedState = initialState) {\n\n  let rootReducer, persistor\n\n  if (process.env && process.env.NODE_ENV === 'production') {\n    const persistConfig = {\n      key: 'root',\n      storage,\n      blacklist: ['router']\n    }\n\n    rootReducer = persistReducer(persistConfig, createRootReducer(history))\n  } else {\n    rootReducer = createRootReducer(history)\n  }\n\n  const epicMiddleware = configureEpicMiddleware()\n\n  const middlewares = [\n    epicMiddleware,\n    routerMiddleware(history)\n  ]\n\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(\n      applyMiddleware(...middlewares)\n    )\n  )\n\n  epicMiddleware.run(rootEpic)\n\n  if (process.env && process.env.NODE_ENV === 'production') {\n    persistor = persistStore(store)\n  }\n\n  return { store, persistor }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M51.829 27.231L39.016 47.485l3.79 1.896-7.56 11.117 6.371.455-8.821 15.68 5.257 3.346-14.276 20.492 7.097 1.978-12.376 18.977 5.14 1.87-9.575 15.046 5.983.5-17.234 20.27 10.016 2.75 31.366 2.43-1.009 11.677h17.192l-1.005-11.629 31.041-3.654 11.164.688-17.972-22.54 5.894-.492-9.574-15.046 5.156-1.876-13.468-21.162 7.862-.232L65.51 79.98l5.224-3.326-7.827-12.925 5.725-2.634-9.45-12.562 4.894-1.253-6.933-7.974 1.55-2.204zm167.607.099l-12.54 19.823 3.71 1.856-7.398 10.88 6.234.444-8.633 15.345 5.145 3.274-13.97 20.055 6.945 1.936-12.114 18.573 5.03 1.829-9.37 14.726 5.856.488-16.866 19.84 9.803 2.69 30.697 2.377-.989 11.428h16.825l-.984-11.38 30.38-3.578 10.925.674-17.588-22.058 5.769-.48-9.371-14.727 5.047-1.835-13.18-20.711 7.693-.227-13.668-19.62 5.113-3.255-7.66-12.65 5.604-2.576-9.25-12.294 4.79-1.226-6.785-7.804 1.517-2.157zm-20.19 11.522l-1.963 2.825.57.812-2.26 2.6 1.7.435-3.43 4.558 2 .92-2.819 4.654 1.884 1.199-.85 1.218 1.32 2.087-2.476 1.239 5.596 8.23-4.513.322 3.63 6.454 7.841-13.94-6.614-.472 5.607-8.245-2.196-3.906 2.21-.158-2.568-3.775 1.365-.683zm-99.699 3.444l-1.964 2.825.571.812-2.261 2.6 1.7.436-3.43 4.557 2 .92-2.818 4.655 1.883 1.2-.651.934 5.902 9.328-1.667.834 2.15 3.16 1.46-2.41-2.18-1.002 3.173-4.217-1.893-.485 3.165-3.64-.492-.7.496-.712-.76-1.09 1.905-1.214-3.264-5.8 2.21-.158-2.567-3.776 1.365-.682zm84.933 3.68l-4.583 6.592 1.035 1.472-4.63 5.325 3.269.836-6.312 8.389 3.824 1.759-1.36 2.246-.414.683-3.452 5.702 3.488 2.22-6.969 10.004-2.357 3.384 2.768.082-.247-.355.778-.6-.04.131.61-.471-.004-.007-.18.05.136-.106 1.211 1.424.217.006-2.065 3.245-.009.015-6.919 10.872 3.444 1.252-6.394 10.048 3.936.328-12 15.05 7.453-.458 20.026 2.358 9.461-14.868-5.063-1.842 11.976-18.361-7.05-1.966 9.501-13.637-3.886-5.579 3.51-2.234-5.89-10.47 4.253-.303-5.048-7.424 2.532-1.266-2.013-3.183-.219-.139.064-.105zm-33.151 1.757l-1.964 2.825.57.812-2.26 2.6 1.7.435-3.43 4.558 2 .92-2.819 4.655 1.884 1.198-4.465 6.41.284.503 2.146.063-1.12 1.762.078.138-.28.178-1.366 2.148 5.526 7.932 2.77-4.575-2.736-1.259 4.054-5.388-2.372-.607 3.888-4.473-.633-.901 1.892-2.722 1.757-2.527-2.079-3.695 2.21-.157-2.567-3.776 1.365-.682zm-70.36 3.065l-1.683 2.42.521.742L77.8 56.27l1.532.392-3.12 4.147 1.804.83-2.561 4.229 1.711 1.09-4.318 6.197 2.503.074-1.954 3.07.69 1.139-2.377 1.513-.828 1.3 1.666.607-1.635 2.57 7.274 10.442.25.03 2.183-3.134-1.55.095 4.915-6.162-1.688-1.074 3.433-5.67-2.736-1.258 4.054-5.388-2.373-.607 1.538-1.77-1.376-1.975 1.733-1.103-2.982-5.3 1.991-.143-2.3-3.384 1.238-.62zm38.897.953l-1.964 2.825.571.813-2.261 2.6 1.7.435-3.43 4.558 2 .92-2.502 4.131.869 1.278.698.443-.2.288.546.804.474.697-2.173.155-.171.245 2.628 4.672-1.772 1.129 4.654 6.68 5.833-8.372-2.285-1.454 2.113-3.489-.944-1.354 1.704-1.085-2.176-1 1.079-1.435-1.966-3.493 2.21-.158-2.566-3.775 1.364-.683zm13.62.57l-2.765 3.975.713 1.013-2.985 3.433 2.18.558-3.812 5.066-.498.662 1.175.54 1.381.637-.53.876.006.013-.023.015-1.174 1.938-1.833 3.027 2.374 1.511-6.185 8.879 3.526.104-4.445 6.985-.683 1.072-1.027 1.615 2.329.847-4.266 6.704 2.72.226-5.11 6.41-2.68 3.36.193.303 4.01-.247 14.3 1.684-.452 5.22h7.184l-.454-5.253 2.308-.178 3.83-6.017-2.33-.848 5.702-8.96-3.673-.107 3.5-5.023.476-.685-3.93-6.026 3.194-.89-6.391-9.175 2.395-1.524-4.066-7.228 2.834-.202-3.325-4.89 1.721-.861zm-25.32 6.952l-.187.27.054.095-.217.139-1.614 2.32.571.813-2.261 2.6 1.7.435-3.43 4.558 2 .92-2.804 4.63.042.061 1.827 1.163-2.366 3.396 1.668 2.965-1.588 1.01-.465.731 6.526 9.369-3.265.91 5.511 8.45-2.34.85 3.212 5.047-.252-2.913 3.225-.25 2.745-3.442-2.362-.196 4.627-7.271-2.329-.848 2.528-3.972-3.877-5.945 2.514-.7-5.01-7.191 1.906-1.213-2.371-4.214-.893-1.586 2.102-.15.108-.009-2.567-3.775 1.365-.682zm62.179 1.504l-1.964 2.825.57.812-2.26 2.6 1.699.436-3.429 4.558 2 .92-1.812 2.991 2.39 3.515-2.07.147-.59.846 3.123 5.55-1.515.965.505.795-.974.08 1.356 1.948 5.642-8.098-3.4-2.164 4.202-6.938-.45-.797.975-.07.38-.626-4.004-1.84 2.702-3.592zm-77.644.57l-2.764 3.975.713 1.013-2.985 3.433 2.18.558-4.31 5.728 2.556 1.176-3.554 5.87 2.374 1.511-4.197 6.025-1.988 2.854 3.526.104-2.987 4.694 2.833 4.067-5.524.162-.477.749 2.33.847-1.721 2.704 9.944 15.624.943.111-.451 5.22h7.184l-.455-5.252 14.408-1.115 4.097-1.125-5.4-6.353-.959.06.488-.612-.43-.506-1.548-1.82 2.78-.232-4.266-6.704 2.318-.843-5.605-8.594 3.194-.89-5.545-7.96-.236-.339-.934-1.34 1.006.03 1.713-1.09-.515-.916-.895-1.591-2.656-4.72 2.835-.203-3.326-4.89 1.722-.861zm64.853 2.34l-2.764 3.975.713 1.014-2.985 3.433 2.179.557-4.31 5.728 2.558 1.176-3.555 5.87 2.374 1.511-3.313 4.755-1.014 1.456-1.857 2.668 3.526.104-6.155 9.672 2.328.847-4.265 6.704.045.004.018.001 2.656.221-8.053 10.1 4.467-.274 14.3 1.683-.391 4.517 6-7.524-3.58-.298 6.756-10.616-3.444-1.252 7.46-11.722-.64-.982 1.537-.428.182-.286-5.395-.159 2.757-3.958.683-.98-2.962-4.253.852-.542.648-.413.694-.442.201-.128-4.066-7.227 2.834-.203-3.324-4.89 1.72-.86zm40.177 12.887l1.655 2.943-3.377 2.15 2.558 3.673 3.974-5.704zm-97.014.66l-1.126.08.994 1.768.932-1.338-.406-.259-.07.115-.19-.28zm17.779 8.679l-.848.236 2.243 3.44 2.205-3.463-3.673-.109zm28.772.126l-2.127.593 2.341 3.589 1.953-2.803zm-68.234 9.046l1.212 1.741 1.066-1.674zm100.35 43.147l-.495 5.713 4.569-5.373z\",\n  fill: \"#173d10\"\n});\n\nvar SvgSimpleForest = function SvgSimpleForest(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 1024,\n    height: 768,\n    viewBox: \"0 0 270.933 203.2\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSimpleForest, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/simple-forest.4a77c0d8.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { ReactComponent as ForestSvg } from '../assets/simple-forest.svg'\n\nimport '../styles/noMatch.css'\n\nconst NoMatch = () => {\n  return (\n    <div className='page--404'>\n      <h1>Das war die Falsche Abzweigung</h1>\n      <ForestSvg />\n      <p>Du scheinst dich ein wenig im Wald verrirrt zu haben. Diese Seite exisitiert leider nicht.</p>\n      <p>Geh doch einfach nochmal eine Seite zurück und versuchs mit einer anderen Abzweigung.</p>\n    </div>\n  )\n}\n\nexport default NoMatch\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\n\nimport '../styles/trailItem.scss'\n\nfunction TrailItem ({\n  uuid,\n  name,\n  stations,\n  description,\n  onStartTrail,\n  onLoadStations\n}) {\n  return (\n    <li className='trail_item card info_card'>\n      <header>\n        <h2>{name}</h2>\n      </header>\n      <div className='info_card__content'>\n        <ReactMarkdown source={description} />\n      </div>\n      <div className='trail_item__toolbar'>\n        <button onClick={(e) => onStartTrail(uuid)}>Trail Starten</button>\n        <button onClick={(e) => onLoadStations(stations)}>Stationen herunterladen</button>\n      </div>\n    </li>\n  )\n}\n\nTrailItem.propTypes = {\n  uuid: PropTypes.string,\n  name: PropTypes.string,\n  description: PropTypes.string,\n  onStartTrail: PropTypes.func\n}\n\nexport default TrailItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../styles/dialog.scss'\n\nexport default function Dialog ({ title, open, tools, children }) {\n  let dialogClasses = 'dialog'\n  if (!open) {\n    dialogClasses += ' dialog--closed'\n    return <div className={dialogClasses} />\n  }\n  return (\n    <div className={dialogClasses}>\n      <div className='box'>\n        <header>\n          <h2>{title}</h2>\n        </header>\n        <div className='box__content'>\n          {children}\n        </div>\n        <footer className='box__toolbar'>\n          {tools}\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nDialog.propTypes = {\n  title: PropTypes.string,\n  open: PropTypes.bool,\n  tools: PropTypes.node,\n  children: PropTypes.node\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport TrailItem from './trailItem.js'\nimport Dialog from './dialog.js'\n\nimport '../styles/trailList.css'\n\nconst TrailsList = ({\n  trails,\n  error,\n  onStartTrail,\n  onStartTrailAccept,\n  onStartTrailCancel,\n  onLoadStations\n}) => {\n  let errorDialog = ''\n  if (error !== undefined) {\n    const dialogToolbar = [\n      (\n        <button\n          key='c'\n          onClick={onStartTrailCancel}\n        >\n          Abbrechen\n        </button>),\n      (\n        <button\n          key='o'\n          onClick={() => onStartTrailAccept(error.selectedTrail.uuid)}\n        >\n        Trail {error.selectedTrail.name} Starten\n        </button>)\n    ]\n    errorDialog = (\n      <Dialog title='Achtung' open={error !== undefined} tools={dialogToolbar}>\n        <p>Der Trail {error.currentTrail.name} läuft bereits</p>\n        <p>Willst du wirklich einen neuen Trail starten</p>\n      </Dialog>\n    )\n  }\n  return (\n    <section className='page--trails_list'>\n      {errorDialog}\n      <ul className='trails_list no_list_style'>\n        {trails.map(\n          (trail) =>\n            <TrailItem\n              key={trail.uuid}\n              onStartTrail={onStartTrail}\n              onLoadStations={onLoadStations}\n              {...trail}\n            />\n        )}\n      </ul>\n    </section>\n  )\n}\n\nTrailsList.propTypes = {\n  trails: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      description: PropTypes.string,\n      uuid: PropTypes.string\n    })\n  ),\n  error: PropTypes.object,\n  onStartTrail: PropTypes.func,\n  onStartTrailAccept: PropTypes.func,\n  onStartTrailCancel: PropTypes.func,\n  onLoadStations: PropTypes.func\n}\n\nexport default TrailsList\n","import { connect } from 'react-redux'\nimport TrailsList from '../components/trailsList.js'\nimport { getTrailsList } from '../selectors/trails.selectors.js'\nimport { startTrail, cancelStartTrail, acceptStartTrail } from '../actions/trails.action.js'\nimport { loadStations } from '../actions/station.action.js'\n\nconst mapStateToProps = state => {\n  return {\n    trails: getTrailsList(state),\n    error: (state.trails.error !== undefined ? {\n      currentTrail: state.trails.byUuid[state.trails.current_trail],\n      selectedTrail: state.trails.byUuid[state.trails.error.selected_trail]\n    } : undefined)\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onStartTrail: (uuid) => dispatch(startTrail(uuid)),\n    onStartTrailCancel: () => dispatch(cancelStartTrail()),\n    onStartTrailAccept: (uuid) => dispatch(acceptStartTrail(uuid)),\n    onLoadStations: (stations) => dispatch(loadStations(stations))\n  }\n}\n\nconst TrailsListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrailsList)\n\nexport default TrailsListContainer\n","import {\n  LOAD_TRAILS_START,\n  START_TRAIL_BEGIN,\n  START_TRAIL_CANCEL,\n  START_TRAIL_SUCCESS,\n} from '../constants/trails.constants.js'\n\nexport function loadTrails () {\n  return {\n    type: LOAD_TRAILS_START\n  }\n}\n\nexport function startTrail (trailId) {\n  return {\n    type: START_TRAIL_BEGIN,\n    trailId\n  }\n}\n\nexport function cancelStartTrail () {\n  return {\n    type: START_TRAIL_CANCEL\n  }\n}\n\nexport function acceptStartTrail (trailId) {\n  return {\n    type: START_TRAIL_SUCCESS,\n    trailId\n  }\n}\n","import { connect } from 'react-redux'\n\nimport StationInfoComponent from '../components/stationInfo.js'\n\nimport { getStationBySlug } from '../selectors/station.selectors.js'\n\nimport { unlockStationStart } from '../actions/station.action.js'\n\nfunction mapStateToProps (state, props) {\n  return {\n    station: getStationBySlug(state, {slug: props.match.params.stationSlug}),\n    ...props\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    onUnlockStation: (uuid) => dispatch(unlockStationStart(uuid))\n  }\n}\n\nconst StationView = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StationInfoComponent)\n\nexport default StationView\n","import React from 'react';\nimport PropTypes from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\n\nexport default function StationInfo ({station, onUnlockStation}) {\n  return (\n    <div className='card info_card'>\n      <header>\n        <h2>{station.name}</h2>\n      </header>\n      <div className='info_card__content'>\n        <ReactMarkdown source={station.description} />\n      </div>\n      <div>\n        <button onClick={() => onUnlockStation(station.uuid)}>UNLOCK</button>\n      </div>\n    </div>\n  )\n}\n\nStationInfo.propTypes = {\n  station: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    activities: PropTypes.array\n  }).isRequired\n}\n","import { connect } from 'react-redux'\n\nimport TextActivityComponent from '../components/textActivity.js'\n\nimport { getActivity } from '../selectors/activity.selectors.js'\n\nimport { completeActivity } from '../actions/activity.action.js'\n\nfunction mapStateToProps (state, props) {\n  return {\n    activity: getActivity(state, props)\n  }\n}\n\nfunction mapDispatchTopProps (dispatch) {\n  return {\n    onReadText: (uuid, points) => dispatch(completeActivity(uuid, points)),\n  }\n}\n\nconst TextActivity = connect(\n  mapStateToProps,\n  mapDispatchTopProps\n)(TextActivityComponent)\n\nexport default TextActivity\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\n\nimport CorrectSymbol from '../assets/correct.svg'\n\n\nexport default function TextActivity ({\n  activity,\n  onReadText\n}) {\n  if (!activity.completed) {\n    onReadText(activity.uuid, activity.points)\n  }\n  return (\n    <section className='activity text_activity card info_card'>\n      <header>\n        <h2>{activity.name} {activity.completed ? <img src={CorrectSymbol} alt='completed' /> : ''}</h2>\n      </header>\n      <div className=\"info_card__content\">\n        <ReactMarkdown source={activity.text} />\n      </div>\n    </section>\n  )\n}\n\nTextActivity.propTypes = {\n  activity: PropTypes.shape({\n    text: PropTypes.string,\n    uuid: PropTypes.string,\n    open: PropTypes.bool,\n    name: PropTypes.string,\n    completed: PropTypes.bool\n  }),\n  onReadText: PropTypes.func,\n}\n","import { connect } from 'react-redux'\n\nimport ImageActivityComponent from '../components/imageActivity.js'\n\nimport { getActivity } from '../selectors/activity.selectors.js'\n\nimport { completeActivity } from '../actions/activity.action.js'\n\nfunction mapStateToProps (state, props) {\n  return {\n    activity: getActivity(state, props)\n  }\n}\n\nfunction mapDispatchTopProps (dispatch) {\n  return {\n    onViewImage: (uuid, points) => dispatch(completeActivity(uuid, points)),\n  }\n}\n\nconst ImageActivity = connect(\n  mapStateToProps,\n  mapDispatchTopProps\n)(ImageActivityComponent)\n\nexport default ImageActivity\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\n\nimport CorrectSymbol from '../assets/correct.svg'\n\nimport '../styles/imageActivity.scss'\n\nexport default function ImageActivity ({\n  activity,\n  onViewImage\n}) {\n  if (!activity.completed) {\n    onViewImage(activity.uuid, activity.points)\n  }\n  return (\n    <section className='activity image_activity card info_card'>\n      <header>\n        <h2>{activity.name} {activity.completed ? <img src={CorrectSymbol} alt='completed' /> : ''}</h2>\n      </header>\n      <div className=\"image_activity__image\">\n        <img src={activity.image.src} alt={activity.image.alt} />\n      </div>\n      <div className=\"info_card__content\">\n        <ReactMarkdown source={activity.text} />\n      </div>\n    </section>\n  )\n}\n\nImageActivity.propTypes = {\n  activity: PropTypes.shape({\n    text: PropTypes.string,\n    uuid: PropTypes.string,\n    open: PropTypes.bool,\n    name: PropTypes.string,\n    completed: PropTypes.bool,\n    image: PropTypes.shape({\n      src: PropTypes.string,\n      alt: PropTypes.string\n    })\n  }),\n  onViewImage: PropTypes.func,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport CorrectSymbol from '../assets/correct.svg'\n\nimport '../styles/multiChoiceActivity.scss'\n\nfunction MultiChoiceAnswer ({ id, text, onClick, reveal, choosen, correct }) {\n  let classes = 'multi_choice_answer'\n  if (choosen) {\n    classes += ' multi_choice_answer--choosen'\n    if (correct) {\n      classes += ' multi_choice_answer--correct'\n    } else {\n      classes += ' multi_choice_answer--wrong'\n    }\n  } else if (reveal) {\n    classes += ' multi_choice_answer--reveal'\n    if (correct) {\n      classes += ' multi_choice_answer--reveal_correct'\n    } else {\n      classes += ' multi_choice_answer--reveal_wrong'\n    }\n  }\n  return (\n    <button\n      onClick={() => onClick(id)}\n      className={classes}\n    >\n      {text}\n      <span />\n    </button>\n  )\n}\nMultiChoiceAnswer.propTypes = {\n  text: PropTypes.string,\n  id: PropTypes.string,\n  choosen: PropTypes.bool,\n  correct: PropTypes.bool,\n  reveal: PropTypes.bool,\n  onClick: PropTypes.func\n}\n\nexport default function MultiChoiceActivity ({\n  activity,\n  onChooseAnswer\n}) {\n  function onAnswerClicked (id) {\n    if (!activity.reveal && !activity.answers[id].choosen) {\n      onChooseAnswer(activity.uuid, id)\n    }\n  }\n  return (\n    <section className='activity multi_choice_activity card card_info'>\n      <header>\n        <h2>{activity.name} {activity.completed ? <img src={CorrectSymbol} alt='completed' /> : ''}</h2>\n      </header>\n      <div className='multi_choice_activity__question'>\n        {activity.question}\n      </div>\n      <div className='multi_choice_activity__answers'>\n        {Object.values(activity.answers).map(a => <MultiChoiceAnswer key={a.id} reveal={activity.reveal} {...a} onClick={onAnswerClicked} />)}\n      </div>\n    </section>\n  )\n}\n\nMultiChoiceActivity.propTypes = {\n  activity: PropTypes.shape({\n    question: PropTypes.string,\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    answers: PropTypes.object\n  }),\n  onChooseAnswer: PropTypes.func\n}\n","import { connect } from 'react-redux'\n\nimport MultiChoiceActivityComponent from '../components/multiChoiceActivity.js'\n\nimport { chooseAnswer } from '../actions/multiChoiceActivity.action.js'\n\nimport { getActivity } from '../selectors/activity.selectors.js'\n\nfunction mapStateToProps (state, props) {\n  return {\n    activity: getActivity(state, props)\n  }\n}\n\nfunction mapDispatchTopProps (dispatch) {\n  return {\n    onChooseAnswer: (uuid, answerId) => dispatch(chooseAnswer(uuid, answerId))\n  }\n}\n\nconst MultiChoiceActivity = connect(\n  mapStateToProps,\n  mapDispatchTopProps\n)(MultiChoiceActivityComponent)\n\nexport default MultiChoiceActivity\n","import { connect } from 'react-redux'\n\nimport { getActivityBySlug } from '../selectors/activity.selectors.js'\n\nimport ActitityWrapper from '../components/activityWrapper.js'\n\nfunction mapStateToProps (state, props) {\n  const slug = props.match.params.activitySlug\n  const activity = getActivityBySlug(state, {slug})\n  return {\n    activityType: activity.activityType,\n    uuid: activity.uuid\n  }\n}\n\nfunction mapDispatchTopProps (dispatch) {\n  return {\n\n  }\n}\n\nconst Activity = connect(\n  mapStateToProps,\n  mapDispatchTopProps\n)(ActitityWrapper)\n\nexport default Activity\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n  ACTIVITY_TYPE_TEXT,\n  ACTIVITY_TYPE_IMAGE,\n  ACTIVITY_TYPE_MULTI_CHOICE\n} from '../constants/activity.constants.js'\n\nimport TextActivity from '../containers/textActivity.container.js'\n\nimport ImageActivity from '../containers/imageActivity.container.js'\n\nimport MultiChoiceActivity from '../containers/multiChoiceActivity.container.js'\n\nimport '../styles/activity.scss'\n\nexport default function ActitityWrapper ({ activityType, uuid }) {\n  switch (activityType) {\n    case ACTIVITY_TYPE_TEXT:\n      return (<TextActivity uuid={uuid} />)\n    case ACTIVITY_TYPE_IMAGE:\n      return (<ImageActivity uuid={uuid} />)\n    case ACTIVITY_TYPE_MULTI_CHOICE:\n      return (<MultiChoiceActivity uuid={uuid} />)\n    default:\n      return (<div>TODO</div>)\n  }\n}\n\nActitityWrapper.propTypes = {\n  activityType: PropTypes.string.isRequired,\n  uuid: PropTypes.string.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { useRouteMatch } from 'react-router-dom'\nimport { Redirect, Route, Switch } from 'react-router'\nimport ReactMarkdown from 'react-markdown'\nimport StationView from '../containers/stationView.container.js'\nimport ActivityWrapper from '../containers/activityWrapper.container.js'\n\nimport '../styles/trailView.scss'\n\nexport default function TrailView ({ trail, currentStation }) {\n  let { path } = useRouteMatch();\n  if (trail === undefined) {\n    return <Redirect to='/trails' />\n  }\n  return (\n    <div className='trail_view'>\n      <section className='trail_view__content'>\n        <Switch>\n          <Route exact path={path}>\n            <TrailInfoView {...trail} />\n          </Route>\n          <Route path={`${path}/:stationSlug/:activitySlug`} component={ActivityWrapper} />\n          <Route path={`${path}/:stationSlug`} component={StationView} />\n        </Switch>\n      </section>\n    </div>\n  )\n}\n\nexport function TrailInfoView ( {name, description} ) {\n  return (\n    <li className='card info_card'>\n      <header>\n        <h2>{name}</h2>\n      </header>\n      <div className='info_card__content'>\n        <ReactMarkdown source={description} />\n      </div>\n    </li>\n  )\n}\n\n\nTrailView.propTypes = {\n  trail: PropTypes.shape({\n    name: PropTypes.string,\n    description: PropTypes.string,\n    uuid: PropTypes.string,\n    stations: PropTypes.arrayOf(PropTypes.string)\n  })\n}\n","import { connect } from 'react-redux'\nimport TrailView from '../components/trailView.js'\nimport TrailTool from '../components/trailToolbar.component.js'\nimport { getCurrentTrail } from '../selectors/trails.selectors.js'\nimport { getPath } from '../selectors/path.selectors.js'\n\nfunction mapStateToProps (state) {\n  return {\n    trail: getCurrentTrail(state),\n    currentStation: state.trails.currentStation\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {}\n}\n\nexport const CurrentTrail = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrailView)\n\nfunction mapStateToToolbarProps (state) {\n  return {\n    trail: getCurrentTrail(state), \n    path: getPath(state)\n  }\n}\n\nexport const CurrentTrailToolbar = connect(\n  mapStateToToolbarProps,\n  mapDispatchToProps,\n)(TrailTool)\n\nexport default CurrentTrail\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nexport default function TrailToolbar( \n  {\n    trail,\n    path,\n    match\n  }\n){\n  if(!trail) return (<div/>)\n\n  const current = path.findIndex(\n    (elem) => `/mytrail/${elem}` === match.url || `/mytrail${elem}` === match.url\n  )\n  return (\n    <div className=\"toolbar\">\n      {current > 0 ? (<Link to={`/mytrail/${path[current-1]}`}>{'<'}</Link>) :''}\n      <Link to=\"/mytrail\">{trail.name}</Link>\n      {current < path.length-1 ? <Link to={`/mytrail/${path[current+1]}`}>{'>'}</Link> : ''}\n    </div>\n  )\n}\n\nTrailToolbar.propTypes = {\n  trail: PropTypes.shape({\n    name: PropTypes.string,\n    description: PropTypes.string,\n    uuid: PropTypes.string,\n    stations: PropTypes.arrayOf(PropTypes.string)\n  }),\n  currentStation: PropTypes.shape({\n    uuid: PropTypes.string,\n    slug: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    activities: PropTypes.array\n  }),\n  nextStation: PropTypes.shape({\n    uuid: PropTypes.string,\n    slug: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    activities: PropTypes.array\n  }),\n  prevStation: PropTypes.shape({\n    uuid: PropTypes.string,\n    slug: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    activities: PropTypes.array\n  })\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {SENDER_IS_PLAYER} from '../constants/chat.constants.js'\n\nimport '../styles/chat.scss'\n\nexport default function ChatMessageView ({ message, sender }) {\n  const messageClasses = [\n    'chat_message'\n  ]\n  let senderName = 'SENSI'\n\n  if(sender === SENDER_IS_PLAYER){\n    messageClasses.push('chat_message--own')\n    senderName = '<SPIELERNAME>'\n  } else {\n    messageClasses.push('chat_message--others')\n  }\n  return (\n    <div className={messageClasses.join(' ')}>\n      <h5 className='chat_message__sender'>{senderName}</h5>\n      <div className='chat_message__message'><p>{message}</p></div>\n    </div>\n  )\n}\n\nChatMessageView.propTypes = {\n  message: PropTypes.string.isRequired,\n  sender: PropTypes.string.isRequired\n}\n","import { createSelector } from 'reselect'\n\nexport function selectChatMessages (state) {\n  return state.chat.messageQueue\n}\n\nexport function selectChatOptions (state) {\n  return state.chat.chatOptions\n}\n\nexport const getChatMessages = createSelector(\n  [selectChatMessages],\n  (messages) => messages\n)\n\nexport const getChatOptions = createSelector(\n  [selectChatOptions],\n  (options) => options\n)\n","import { connect } from 'react-redux'\n\nimport ChatView from '../components/Chat.view.js'\nimport ChatTool from '../components/chatToolbar.component.js'\n\nimport { \n  chooseChatOption\n} from '../actions/chat.actions.js'\n\nimport { getChatMessages, getChatOptions } from '../selectors/chat.selector.js'\n\nconst mapStateToProps = state => {\n  return {\n    messages: getChatMessages(state),\n    chatOptions: getChatOptions(state)\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n  }\n}\n\nconst Chat = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChatView)\n\nexport default Chat\n\nfunction mapStateToToolbarProps (state) {\n  return {\n    chatOptions: getChatOptions(state)\n  }\n}\n\nconst mapDispatchToToolbarProps = dispatch => {\n  return {\n    onSendMessage: (option) => dispatch(chooseChatOption(option))\n  }\n}\n\nexport const ChatToolbar = connect(\n  mapStateToToolbarProps,\n  mapDispatchToToolbarProps,\n)(ChatTool)\n\n","import React, {useEffect, useRef} from 'react'\nimport PropTypes from 'prop-types'\nimport ChatMessageView from './ChatMessage.view.js'\n\nimport '../styles/chat.scss'\n\nexport default function ChatView ({messages, chatOptions}) {\n\n  const messagesEndRef = useRef(null)\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ block: 'end', behavior: \"smooth\" })\n  }\n\n  useEffect(scrollToBottom, [messages, chatOptions]);\n\n  return (\n    <div className=\"chat\">\n      <section className=\"message_board\">\n        { messages.map((m, idx) => <ChatMessageView key={idx} {...m} />)}\n      </section>\n      <div ref={messagesEndRef} />\n    </div>\n  )\n}\n\nChatView.propTypes = {\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      message: PropTypes.string,\n      sender: PropTypes.string\n    })\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function ChatToolbar({ onSendMessage, chatOptions }) {\n  const chooseFrom = chatOptions.map(option => {\n    return (\n      <button\n        key={option.index} \n        className='chat_toolbar__option'\n        onClick={() => onSendMessage(option.index)}\n      >{option.text}</button>)\n  })\n  return (\n    <div className='toolbar chat_toolbar'>\n      {chooseFrom}\n    </div>\n  )\n}\n\nChatToolbar.propTypes = {\n  onSendMessage: PropTypes.func,\n  chatOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      text: PropTypes.string,\n      index: PropTypes.number\n    })\n  )\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { CurrentTrailToolbar } from '../containers/currentTrail.container.js'\nimport { ChatToolbar } from '../containers/chat.container.js'\n\nexport default function ToolbarComponent () {\n  return (\n    <Switch>\n      <Route exact path='/trails'>\n        <div className=\"toolbar\">\n          <Link to='/mytrail'>GOTO Current Trail</Link>\n        </div>\n      </Route>\n      <Route path='/chat' component={ChatToolbar} />\n      <Route path='/mytrail/:stationSlug/:activitySlug' component={CurrentTrailToolbar} />\n      <Route path='/mytrail/:stationSlug' component={CurrentTrailToolbar} />\n      <Route path='/mytrail' component={CurrentTrailToolbar} />\n      <Route>\n        <div className=\"empty-toolbar\"/>\n      </Route>\n    </Switch>\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../styles/score.scss'\n\nexport function ScoreCounter ({ score, isActive }) {\n  if (!isActive) {\n    return ''\n  }\n  return (\n    <div className='score'>\n      <strong>Score:</strong> <span className='score-value'>{score}</span>\n    </div>\n  )\n}\n\nexport default ScoreCounter\n\nScoreCounter.propTypes = {\n  score: PropTypes.number.isRequired,\n  isActive: PropTypes.bool.isRequired\n}\n","import { connect } from 'react-redux'\n\nimport ScoreCounterComponent from '../components/scoreCounter.js'\n\nimport { getCurrentTrail } from '../selectors/trails.selectors.js'\n\nfunction mapStateToProps (state) {\n  return {\n    score: state.score.score,\n    isActive: getCurrentTrail(state) !== undefined\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {}\n}\n\nexport const ScoreCounter = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ScoreCounterComponent)\n\nexport default ScoreCounter\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n  MESSAGE_TYPE_ERROR,\n  MESSAGE_TYPE_LOG,\n  MESSAGE_TYPE_SUCCESS,\n} from '../constants/messages.constatns.js'\n\nimport '../styles/messages.scss'\n\nexport default function MessageDisplay ({ messages, onMessageRead }) {\n  return (\n    <div className='message_display'>\n      {messages.map((m, idx) => (\n        <div\n          key={m.uuid}\n          className={['card', 'message', messageTypeCss[m.messageType]].join(' ')}\n          onClick={() => onMessageRead(m.uuid)}\n        >{m.text}</div>\n      ))}\n    </div>\n  )\n}\n\nMessageDisplay.propTypes = {\n  message: PropTypes.arrayOf(\n    PropTypes.shape({\n      messageType: PropTypes.string,\n      text: PropTypes.string\n    })\n  ),\n  onMessageRead: PropTypes.func\n}\n\nconst messageTypeCss = {\n  [MESSAGE_TYPE_ERROR]: 'message--error',\n  [MESSAGE_TYPE_LOG]: 'message--log',\n  [MESSAGE_TYPE_SUCCESS]: 'message--success'\n}\n","import { createSelector } from 'reselect'\nimport {\n  LAST_MESSAGE_COUNT,\n  MESSAGE_TIME_IN_SECONDS\n} from '../constants/messages.constatns.js'\n\nexport function selectMessages (state) {\n  return Object.values(state.messages.byUuid)\n}\n\nexport const getNewestMessages = createSelector(\n  [selectMessages],\n  (messages) => messages\n    .filter(m => !m.hide && m.timestamp + MESSAGE_TIME_IN_SECONDS * 1000 >= Date.now())\n    .sort((a,b) => a - b)\n    .slice(-LAST_MESSAGE_COUNT)\n)\n \n  /*\nfunction sortByTimestamp(a, b) {\n  a.timestamp - b.timestamp;\n  //if (a is less than b by some ordering criterion) {\n  if(a,timestamp)\n    return -1;\n  }\n  if (a is greater than b by the ordering criterion) {\n    return 1;\n  }\n  // a must be equal to b\n  return 0;\n}*/\n","import { connect } from 'react-redux'\n\nimport MessageDisplay from '../components/messageDisplay.js'\n\nimport { getNewestMessages } from '../selectors/message.selector.js'\n\nimport { hideMessage } from '../actions/messages.actions.js'\n\nconst mapStateToProps = state => {\n  return {\n    messages: getNewestMessages(state)\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onMessageRead: (uuid) => dispatch(hideMessage(uuid))\n  }\n}\n\nconst Messages = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MessageDisplay)\n\nexport default Messages\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nexport default function Map ({\n\n}) {\n  return (\n    <div>\n      <iframe id=\"inlineFrameExample\"\n        title=\"Inline Frame Example\"\n        width=\"1000\"\n        height=\"1000\"\n        src=\"https://nature40.github.io/GPS-TotalStation-Documentation/assets/maps/cst_leaflet/cst_webmap.html\">\n      </iframe>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Route, Switch } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport '../styles/app.scss'\nimport NoMatch from './noMatch.js'\nimport TrailsListContainer from '../containers/trailslist.container.js'\nimport CurrentTrail from '../containers/currentTrail.container.js'\nimport ToolbarComponent from '../components/toolbar.component.js'\nimport Chat from '../containers/chat.container.js'\n\nimport ScoreCounter from '../containers/scoreCounter.container.js'\n\nimport Messages from '../containers/messages.container.js'\n\nimport Map from './mapIframe.view.js'\n\nfunction dummyFrontPage (clearButton) {\n  return (\n    <div className='dummy_front_page'>\n      <Link to='/trails'>GOTO Trails</Link>\n      <Link to='/mytrail'>GOTO Current Trail</Link>\n      <Link to='/chat'>GOTO Chat</Link>\n      <Link to='/map'>GOTO Map</Link>\n      {clearButton || ''}\n    </div>\n  )\n}\n\nfunction App ({ clearButton }) {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <Link to='/'>SENSO-Trail App</Link>\n        <ScoreCounter />\n        <Messages />\n      </header>\n      <main>\n        <Switch>\n          <Route exact path='/' render={() => dummyFrontPage(clearButton)} />\n          <Route exact path='/chat' component={Chat} />\n          <Route exact path='/map' component={Map} />\n          <Route exact path='/trails' component={TrailsListContainer} />\n          <Route path='/mytrail' component={CurrentTrail} />\n          <Route component={NoMatch} />\n        </Switch>\n      </main>\n      <ToolbarComponent />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"," // eslint-disable-next-line \nimport _POLYFILL from './utils/polyfills/index.js'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\n\n\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport configureStore, { history } from './createStore.js'\nimport './styles/index.scss'\nimport App from './components/app.js'\nimport * as serviceWorker from './serviceWorker'\n\n// For now only. Needs to be some sort of init action later\nimport { loadTrails } from './actions/trails.action.js'\nimport { loadInkJsonStart } from './actions/chat.actions.js'\n\nconst { store, persistor } = configureStore()\n\nfunction clearCaches () {\n  console.log('START CLEARING')\n  Promise.all([\n    window.caches.keys()\n      .then((names) => {\n        for (const name of names) {\n          window.caches.delete(name)\n        }\n      })\n      .then(() => { console.log('Service Worker cleared') }),\n    persistor.purge().then(() => {\n      console.log('Persist store cleared')\n    })\n  ]).then(() => {\n    console.log('all caches cleared')\n    window.location.reload()\n  })\n}\n\nstore.dispatch(loadTrails())\nstore.dispatch(loadInkJsonStart('ink-test-story.json'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (process.env && process.env.NODE_ENV === 'production') {\n  const clearCachesButton = (\n    <button onClick={clearCaches}>Clear Caches</button>\n  )\n  ReactDOM.render(\n    <Provider store={store}>\n      <ConnectedRouter history={history} basename={process.env.PUBLIC_URL}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App clearButton={clearCachesButton} />\n        </PersistGate>\n      </ConnectedRouter>\n    </Provider>\n    , document.getElementById('root'))\n  console.log('prod env')\n  serviceWorker.register()\n} else {\n  ReactDOM.render(\n    <Provider store={store}>\n      <ConnectedRouter history={history} basename={process.env.PUBLIC_URL}>\n        <App />\n      </ConnectedRouter>\n    </Provider>\n    , document.getElementById('root'))\n  serviceWorker.unregister()\n}\n","module.exports = __webpack_public_path__ + \"static/media/correct.101c9dab.svg\";"],"sourceRoot":""}