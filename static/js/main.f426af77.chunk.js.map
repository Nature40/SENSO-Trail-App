{"version":3,"sources":["constants/trails.constants.js","reducers/trails.reducer.js","constants/station.constants.js","reducers/station.reducer.js","constants/activity.constants.js","constants/textActivity.constants.js","reducers/textActivity.reducer.js","constants/multiChoiceActivity.constants.js","reducers/multiChoiceActivity.reducer.js","reducers/activity.reducer.js","reducers/root.reducer.js","utils/transforms/entityArray.transforms.js","actions/station.action.js","selectors/trails.selectors.js","epics/trails.epics.js","selectors/activity.selectors.js","epics/station.epics.js","actions/trails.action.js","actions/activity.action.js","epics/activity.epics.js","actions/multiChoiceActivity.action.js","epics/multiChoiceActivity.epics.js","epics/textActivity.epics.js","utils/api.js","epics/root.epic.js","createStore.js","assets/simple-forest.svg","components/noMatch.js","components/trailItem.js","components/dialog.js","components/trailsList.js","containers/trailslist.container.js","containers/textActivity.container.js","actions/textActivity.action.js","components/textActivity.js","components/multiChoiceActivity.js","containers/multiChoiceActivity.container.js","containers/activityWrapper.container.js","components/activityWrapper.js","selectors/station.selectors.js","containers/stationView.container.js","components/stationView.js","components/stationList.js","containers/currentTrail.container.js","components/trailView.js","components/app.js","serviceWorker.js","index.js","assets/correct.svg"],"names":["LOAD_TRAILS_SUCCESS","LOAD_TRAILS_FAIL","LOAD_TRAILS_START","START_TRAIL_BEGIN","START_TRAIL_SUCCESS","START_TRAIL_CANCEL","START_TRAIL_REJECT","SELECT_NEXT_STATION","initialState","loading","byUuid","trails","state","action","type","transformedTrails","error","undefined","currentStation","current_trail","trailId","selected_trail","LOAD_STATION_START","LOAD_STATION_SUCCESS","LOAD_STATION_FAIL","COMPLETE_STATION_START","COMPLETE_STATION_FAIL","COMPLETE_STATION_SUCCESS","stations","transformedStations","uuid","completed","ACTIVITY_TYPE_TEXT","ACTIVITY_TYPE_MULTI_CHOICE","LOAD_ACTIVITIES_START","LOAD_ACTIVITIES_FAIL","LOAD_ACTIVITIES_SUCCESS","COMPLETE_ACTIVITY","OPEN_TEXT","CLOSE_TEXT","CHOOSE_ANSWER","REVEAL_ANSWERS","activity","transformedActivities","activityType","open","textActivity","answers","answerId","choosen","reveal","multiChoiceActivity","trailsState","station","stationState","activityState","normalizeEntityArray","trailsArray","res","trail","loadStations","uuids","getTrailsList","createSelector","Object","keys","map","key","index","getCurrentTrail","combineEpics","action$","state$","dep","pipe","ofType","value","fetchJSON","mergeMap","a","process","result","catchError","e","of","push","take","selectActivity","getActivity","getActivityType","switchMap","activities","reduce","isCompleted","completeStationFail","completeActivity","toLoadArray","values","v","forEach","loadActivity","revealAnswers","filter","id","correct","length","EMPTY","url","params","mockFetchActivities","request","headers","Accept","method","window","fetch","response","json","data","s","includes","Promise","all","activityUrl","resposnes","r","flat","rootEpic","trailsEpics","stationEpics","activityEpics","mulitChoiceActivityEpics","textActivityEpics","configureEpicMiddleware","createEpicMiddleware","dependencies","history","createBrowserHistory","basename","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","NoMatch","className","TrailItem","name","description","onStartTrail","onLoadStations","onClick","Dialog","tools","children","dialogClasses","TrailsList","onStartTrailAccept","onStartTrailCancel","errorDialog","dialogToolbar","selectedTrail","currentTrail","TrailsListContainer","connect","dispatch","TextActivity","onReadText","openText","onCloseText","closeText","contentClass","button","src","CorrectSymbol","alt","text","MultiChoiceAnswer","classes","MultiChoiceActivity","onChooseAnswer","chooseAnswer","onAnswerClicked","question","Activity","getStation","StationView","onCompleteStation","completeStationStart","isLastStation","StationList","stationViews","CurrentTrail","to","App","clearButton","exact","path","render","dummyFrontPage","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","rootReducer","preloadedState","persistConfig","storage","blacklist","persistReducer","combineReducers","router","connectRouter","epicMiddleware","middlewares","routerMiddleware","store","createStore","applyMiddleware","run","persistor","persistStore","configureStore","clearCachesButton","caches","names","delete","purge","reload","ReactDOM","document","getElementById","URL","href","origin","addEventListener","contentType","get","status","ready","unregister","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.f426af77.chunk.js","sourcesContent":["export const LOAD_TRAILS_SUCCESS = 'LOAD_TRAILS_SUCCESS'\nexport const LOAD_TRAILS_FAIL = 'LOAD_TRAILS_FAIL'\nexport const LOAD_TRAILS_START = 'LOAD_TRAILS_START'\n\nexport const START_TRAIL_BEGIN = 'START_TRAIL_BEGIN'\nexport const START_TRAIL_SUCCESS = 'START_TRAIL_SUCCESS'\nexport const START_TRAIL_CANCEL = 'START_TRAIL_CANCEL'\nexport const START_TRAIL_REJECT = 'START_TRAIL_REJECT'\n\nexport const SELECT_NEXT_STATION = 'SELECT_NEXT_STATION'\n","import {\n  LOAD_TRAILS_SUCCESS,\n  LOAD_TRAILS_FAIL,\n  LOAD_TRAILS_START,\n  START_TRAIL_SUCCESS,\n  START_TRAIL_REJECT,\n  START_TRAIL_CANCEL,\n  SELECT_NEXT_STATION\n} from '../constants/trails.constants.js'\n\nexport const initialState = {\n  loading: false,\n  byUuid: {}\n}\n\nfunction trails (state = initialState, action) {\n  switch (action.type) {\n    case LOAD_TRAILS_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case LOAD_TRAILS_FAIL:\n      return {\n        ...state,\n        loading: false\n      }\n    case LOAD_TRAILS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        byUuid: { ...action.transformedTrails }\n      }\n    case START_TRAIL_SUCCESS:\n      return {\n        ...state,\n        error: undefined,\n        currentStation: 0,\n        current_trail: action.trailId\n      }\n    case START_TRAIL_REJECT:\n      return {\n        ...state,\n        error: {\n          selected_trail: action.trailId\n        }\n      }\n    case START_TRAIL_CANCEL:\n      return {\n        ...state,\n        error: undefined\n      }\n    case SELECT_NEXT_STATION:\n      return {\n        ...state,\n        currentStation: state.currentStation + 1\n      }\n    default:\n      return state\n  }\n}\nexport default trails\n","export const LOAD_STATION_START = 'LOAD_STATION_START'\nexport const LOAD_STATION_SUCCESS = 'LOAD_STATION_SUCCESS'\nexport const LOAD_STATION_FAIL = 'LOAD_STATION_FAIL'\n\nexport const COMPLETE_STATION_START = 'COMPLETE_STATION_START'\nexport const COMPLETE_STATION_FAIL = 'COMPLETE_STATION_FAIL'\nexport const COMPLETE_STATION_SUCCESS = 'COMPLETE_STATION_SUCCESS'\n","import {\n  LOAD_STATION_START,\n  LOAD_STATION_SUCCESS,\n  LOAD_STATION_FAIL,\n  COMPLETE_STATION_SUCCESS\n} from '../constants/station.constants.js'\n\nexport const initialState = {\n  byUuid: {},\n  loading: false\n}\n\nfunction stations (state = initialState, action) {\n  switch (action.type) {\n    case LOAD_STATION_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case LOAD_STATION_FAIL:\n      return {\n        ...state,\n        loading: false\n      }\n    case LOAD_STATION_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        byUuid: { ...state.byUuid, ...action.transformedStations }\n      }\n    case COMPLETE_STATION_SUCCESS:\n      return {\n        ...state,\n        byUuid: {\n          ...state.byUuid,\n          [action.uuid]: {\n            ...state.byUuid[action.uuid],\n            completed: true\n          }\n        }\n      }\n    default:\n      return state\n  }\n}\n\nexport default stations\n","/* ACTIVITY TYPES */\nexport const ACTIVITY_TYPE_TEXT = 'ACTIVITY_TYPE_TEXT'\nexport const ACTIVITY_TYPE_MULTI_CHOICE = 'ACTIVITY_TYPE_MULTI_CHOICE'\n\n/* ACITONS */\nexport const LOAD_ACTIVITIES_START = 'LOAD_ACTIVITIES_START'\nexport const LOAD_ACTIVITIES_FAIL = 'LOAD_ACTIVITIES_FAIL'\nexport const LOAD_ACTIVITIES_SUCCESS = 'LOAD_ACTIVITIES_SUCCESS'\n\nexport const COMPLETE_ACTIVITY = 'COMPLETE_ACTIVITY'\n","export const OPEN_TEXT = 'OPEN_TEXT'\nexport const CLOSE_TEXT = 'CLOSE_TEXT'\n","import {\n  OPEN_TEXT,\n  CLOSE_TEXT\n} from '../constants/textActivity.constants.js'\n\nexport const initialState = {\n  byUuid: {}\n}\n\nexport default function textActivityCase (state = initialState, action) {\n  switch (action.type) {\n    case OPEN_TEXT:\n      return {\n        ...state,\n        byUuid: {\n          ...state.byUuid,\n          [action.uuid]: {\n            ...state.byUuid[action.uuid],\n            open: true\n          }\n        }\n      }\n    case CLOSE_TEXT:\n      return {\n        ...state,\n        byUuid: {\n          ...state.byUuid,\n          [action.uuid]: {\n            ...state.byUuid[action.uuid],\n            open: false\n          }\n        }\n      }\n    default:\n      return state\n  }\n}\n","export const CHOOSE_ANSWER = 'CHOOSE_ANSWER'\nexport const REVEAL_ANSWERS = 'REVEAL_ANSWERS'\n","import {\n  CHOOSE_ANSWER,\n  REVEAL_ANSWERS\n} from '../constants/multiChoiceActivity.constants.js'\n\nexport const initialState = {\n  byUuid: {}\n}\n\nexport default function multiChoiceActivityCase (state = initialState, action) {\n  switch (action.type) {\n    case CHOOSE_ANSWER:\n      return {\n        ...state,\n        byUuid: {\n          ...state.byUuid,\n          [action.uuid]: {\n            ...state.byUuid[action.uuid],\n            answers: {\n              ...state.byUuid[action.uuid].answers,\n              [action.answerId]: {\n                ...state.byUuid[action.uuid].answers[action.answerId],\n                choosen: true\n              }\n            }\n          }\n        }\n      }\n    case REVEAL_ANSWERS:\n      return {\n        ...state,\n        byUuid: {\n          ...state.byUuid,\n          [action.uuid]: {\n            ...state.byUuid[action.uuid],\n            reveal: true\n          }\n        }\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ACTIVITY_TYPE_TEXT,\n  ACTIVITY_TYPE_MULTI_CHOICE,\n  LOAD_ACTIVITIES_START,\n  LOAD_ACTIVITIES_FAIL,\n  LOAD_ACTIVITIES_SUCCESS,\n  COMPLETE_ACTIVITY\n} from '../constants/activity.constants.js'\n\nimport textActivity from './textActivity.reducer.js'\n\nimport multiChoiceActivity from './multiChoiceActivity.reducer.js'\n\nexport const initialState = {\n  byUuid: {},\n  loading: false\n}\n\nexport default function activity (state = initialState, action) {\n  switch (action.type) {\n    case LOAD_ACTIVITIES_START:\n      return {\n        ...state,\n        loading: true\n      }\n    case LOAD_ACTIVITIES_FAIL:\n      return {\n        ...state,\n        loading: false\n      }\n    case LOAD_ACTIVITIES_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        byUuid: {\n          ...state.byUuid,\n          ...action.transformedActivities\n        }\n      }\n    case COMPLETE_ACTIVITY:\n      return {\n        ...state,\n        byUuid: {\n          ...state.byUuid,\n          [action.uuid]: {\n            ...state.byUuid[action.uuid],\n            completed: true\n          }\n        }\n      }\n    default:\n      switch (action.activityType) {\n        case ACTIVITY_TYPE_TEXT:\n          return textActivity(state, action)\n        case ACTIVITY_TYPE_MULTI_CHOICE:\n          return multiChoiceActivity(state, action)\n        default:\n          return state\n      }\n  }\n}\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\nimport trails, { initialState as trailsState } from './trails.reducer.js'\nimport station, { initialState as stationState } from './station.reducer.js'\nimport activity, { initialState as activityState } from './activity.reducer.js'\n\nexport const initialState = {\n  trails: trailsState,\n  station: stationState,\n  activity: activityState\n}\n\nexport default function createRootReducer (history) {\n  return combineReducers({\n    router: connectRouter(history),\n    trails,\n    station,\n    activity\n    /* Other reducers */\n  })\n}\n","export function normalizeEntityArray (trailsArray) {\n  const res = {}\n  for (const trail of trailsArray) {\n    res[trail.uuid] = trail\n  }\n  return res\n}\n","import {\n  LOAD_STATION_START,\n  LOAD_STATION_SUCCESS,\n  LOAD_STATION_FAIL,\n  COMPLETE_STATION_START,\n  COMPLETE_STATION_SUCCESS,\n  COMPLETE_STATION_FAIL\n} from '../constants/station.constants.js'\n\n/**\n * @param {Array<string>} uuids - Array of uuids of the stations that should be loaded\n */\nexport function loadStations (uuids) {\n  return {\n    type: LOAD_STATION_START,\n    uuids\n  }\n}\n\n/**\n * @param {Object} transformedStations - loaded Stations\n */\nexport function loadStationsSuccess (transformedStations) {\n  return {\n    type: LOAD_STATION_SUCCESS,\n    transformedStations\n  }\n}\n\n/**\n */\nexport function loadStationsFail () {\n  return {\n    type: LOAD_STATION_FAIL,\n  }\n}\n\n/**\n * @param {string} uuid - uuid of the Station to complete\n */\nexport function completeStationStart (uuid) {\n  return {\n    type: COMPLETE_STATION_START,\n    uuid\n  }\n}\n\n/**\n * @param {string} uuid - uuid of the Station to complete\n */\nexport function completeStationSuccess (uuid) {\n  return {\n    type: COMPLETE_STATION_SUCCESS,\n    uuid\n  }\n}\n\n/**\n * @param {string} uuid - uuid of the Station to complete\n */\nexport function completeStationFail (uuid) {\n  return {\n    type: COMPLETE_STATION_FAIL,\n    uuid\n  }\n}\n","import { createSelector } from 'reselect'\n\nfunction selectTrailsList (state) {\n  return Object.keys(state.trails.byUuid).map((key, index) => {\n    return state.trails.byUuid[key]\n  })\n}\n\nexport const getTrailsList = createSelector(\n  [selectTrailsList],\n  (trails) => trails\n)\n\nfunction selectCurrentTrailId (state) {\n  return state.trails.current_trail\n}\n\nfunction selectTrailsByUuid (state) {\n  return state.trails.byUuid\n}\n\nexport const getCurrentTrail = createSelector(\n  [selectTrailsByUuid, selectCurrentTrailId],\n  (trails, uuid) => trails[uuid]\n)\n\n","import { take, mergeMap, catchError, map } from 'rxjs/operators'\nimport { of } from 'rxjs'\nimport { ofType, combineEpics } from 'redux-observable'\nimport { normalizeEntityArray } from '../utils/transforms/entityArray.transforms.js'\n\nimport {\n  LOAD_TRAILS_START,\n  LOAD_TRAILS_SUCCESS,\n  LOAD_TRAILS_FAIL,\n  START_TRAIL_BEGIN,\n  START_TRAIL_SUCCESS,\n  START_TRAIL_REJECT\n} from '../constants/trails.constants.js'\n\nimport { loadStations } from '../actions/station.action.js'\n\nimport { LOAD_ACTIVITIES_SUCCESS } from '../constants/activity.constants.js'\n\nimport { getCurrentTrail } from '../selectors/trails.selectors.js'\n\nimport { push } from 'connected-react-router'\n\nexport const loadTrailsEpic = (action$, state$, { fetchJSON }) => action$.pipe(\n  ofType(LOAD_TRAILS_START),\n  mergeMap(async action => {\n    const url = process.env.PUBLIC_URL + '/json/trailslist.json'\n    const result = await fetchJSON(url)\n    return {\n      type: LOAD_TRAILS_SUCCESS,\n      transformedTrails: normalizeEntityArray(result)\n    }\n  }),\n  catchError((e) => {\n    return of({\n      type: LOAD_TRAILS_FAIL\n    })\n  })\n)\n\nexport const startTrailEpic = (action$, state$, dep) => action$.pipe(\n  ofType(START_TRAIL_BEGIN),\n  map(action => {\n    if (state$.value.trails.current_trail !== undefined) {\n      return {\n        type: START_TRAIL_REJECT,\n        trailId: action.trailId\n      }\n    }\n    return {\n      type: START_TRAIL_SUCCESS,\n      trailId: action.trailId\n    }\n  })\n  /* ,\n   catchError((e) => {\n    console.error(e)\n    return of({\n      type: LOAD_TRAILS_FAIL,\n    })\n  }) */\n)\n\nexport const gotoCurrentStartedTrail = (action$, state$, dep) => action$.pipe(\n  ofType(START_TRAIL_SUCCESS),\n  mergeMap(action => action$.pipe(\n    ofType(LOAD_ACTIVITIES_SUCCESS),\n    map(action => {\n      return push('/mytrail')\n    }),\n    take(1)\n  ))\n)\n\nexport const startTrailSuccessEpic = (action$, state$, dep) => action$.pipe(\n  ofType(START_TRAIL_SUCCESS),\n  mergeMap((action) => {\n    const currentTrail = getCurrentTrail(state$.value)\n    return [loadStations(currentTrail.stations)]\n  })\n)\n\nexport default combineEpics(\n  startTrailEpic,\n  loadTrailsEpic,\n  startTrailSuccessEpic,\n  gotoCurrentStartedTrail\n)\n","import { createSelector } from 'reselect'\n\nfunction selectActivity (state, { uuid }) {\n  return state.activity.byUuid[uuid]\n}\n\nexport const getActivity = createSelector(\n  [selectActivity],\n  (activity) => activity\n)\n\nexport const getActivityType = createSelector(\n  [selectActivity],\n  (activity) => activity.activityType\n)\n","import { mergeMap, catchError, switchMap } from 'rxjs/operators'\nimport { of } from 'rxjs'\nimport { ofType, combineEpics } from 'redux-observable'\nimport { normalizeEntityArray } from '../utils/transforms/entityArray.transforms.js'\n\nimport {\n  LOAD_STATION_START,\n  COMPLETE_STATION_START\n} from '../constants/station.constants.js'\n\nimport { getActivity } from '../selectors/activity.selectors.js'\n\nimport {\n  loadStationsSuccess,\n  loadStationsFail,\n  completeStationFail,\n  completeStationSuccess\n} from '../actions/station.action.js'\n\nimport { selectNextStation } from '../actions/trails.action.js'\n\nexport function loadStationsEpic (action$, state$, { fetchJSON }) {\n  return action$.pipe(\n    ofType(LOAD_STATION_START),\n    mergeMap(async action => {\n      const url = process.env.PUBLIC_URL + '/json/stationlist.json'\n      const result = await fetchJSON(url, { uuids: action.uuids })\n      return loadStationsSuccess(normalizeEntityArray(result))\n    }),\n    catchError((e) => {\n      return of(loadStationsFail())\n    })\n  )\n}\n\nexport function completeStationEpic (action$, state$) {\n  return action$.pipe(\n    ofType(COMPLETE_STATION_START),\n    switchMap((action) => {\n      const station = state$.value.station.byUuid[action.uuid]\n      const activityUuids = station.activities\n      const isCompleted = activityUuids\n        .map((uuid) => getActivity(state$.value, { uuid }))\n        .reduce((isCompleted, activity) => isCompleted && activity.completed)\n      if (isCompleted) {\n        return [completeStationSuccess(action.uuid), selectNextStation()]\n      }\n      return of(completeStationFail(action.uuid))\n    })\n  )\n}\n\nexport default combineEpics(\n  loadStationsEpic,\n  completeStationEpic\n)\n","import {\n  LOAD_TRAILS_START,\n  START_TRAIL_BEGIN,\n  START_TRAIL_CANCEL,\n  START_TRAIL_SUCCESS,\n  SELECT_NEXT_STATION\n} from '../constants/trails.constants.js'\n\n/**\n *\n */\nexport function selectNextStation () {\n  return {\n    type: SELECT_NEXT_STATION\n  }\n}\n\nexport function loadTrails () {\n  return {\n    type: LOAD_TRAILS_START\n  }\n}\n\nexport function startTrail (trailId) {\n  return {\n    type: START_TRAIL_BEGIN,\n    trailId\n  }\n}\n\nexport function cancelStartTrail () {\n  return {\n    type: START_TRAIL_CANCEL\n  }\n}\n\nexport function acceptStartTrail (trailId) {\n  return {\n    type: START_TRAIL_SUCCESS,\n    trailId\n  }\n}\n","import {\n  LOAD_ACTIVITIES_START,\n  LOAD_ACTIVITIES_SUCCESS,\n  COMPLETE_ACTIVITY\n} from '../constants/activity.constants.js'\n\n/**\n * @param {String[]} uuids - uuids of activities to load\n */\nexport function loadActivity (uuids) {\n  return {\n    type: LOAD_ACTIVITIES_START,\n    uuids\n  }\n}\n\n/**\n * @param {Object} transformedActivities - Activities transformed into a key value pair Object\n */\nexport function loadActivitySuccess (transformedActivities) {\n  return {\n    type: LOAD_ACTIVITIES_SUCCESS,\n    transformedActivities\n  }\n}\n\n/**\n * @param {string} uuid - the uuid of the activity\n */\nexport function completeActivity (uuid) {\n  return {\n    type: COMPLETE_ACTIVITY,\n    uuid\n  }\n}\n","import {\n  LOAD_ACTIVITIES_START,\n  LOAD_ACTIVITIES_FAIL\n} from '../constants/activity.constants.js'\n\nimport {\n  LOAD_STATION_SUCCESS\n} from '../constants/station.constants.js'\n\nimport {\n  loadActivitySuccess,\n  loadActivity\n} from '../actions/activity.action.js'\n\nimport { mergeMap, catchError, map } from 'rxjs/operators'\nimport { of } from 'rxjs'\nimport { ofType, combineEpics } from 'redux-observable'\nimport { normalizeEntityArray } from '../utils/transforms/entityArray.transforms.js'\n\nexport function loadActivitiesEpic (action$, state$, { fetchJSON }) {\n  return action$.pipe(\n    ofType(LOAD_ACTIVITIES_START),\n    mergeMap(async action => {\n      const url = process.env.PUBLIC_URL + '/json/activities.json'\n      const result = await fetchJSON(url, { uuids: action.uuids })\n      return loadActivitySuccess(normalizeEntityArray(result))\n    }),\n    catchError((e) => {\n      return of({\n        type: LOAD_ACTIVITIES_FAIL\n      })\n    })\n  )\n}\n\nexport function startLoadActivitiesEpic (action$, state$, dep) {\n  return action$.pipe(\n    ofType(LOAD_STATION_SUCCESS),\n    map(action => {\n      const toLoadArray = Object.values(action.transformedStations)\n        .map((v) => v.activities)\n      const uuids = []\n      toLoadArray.forEach(e => uuids.push(...e))\n      return loadActivity(uuids)\n    })\n  )\n}\n\nexport default combineEpics(\n  loadActivitiesEpic,\n  startLoadActivitiesEpic\n)\n","import {\n  CHOOSE_ANSWER,\n  REVEAL_ANSWERS\n} from '../constants/multiChoiceActivity.constants.js'\n\nimport { ACTIVITY_TYPE_MULTI_CHOICE } from '../constants/activity.constants.js'\n\n/**\n * @param {string} uuid - the uuid of the multiChoiceActivity\n * @param {string} answerId - the id of the answer\n */\nexport function chooseAnswer (uuid, answerId) {\n  return {\n    type: CHOOSE_ANSWER,\n    activityType: ACTIVITY_TYPE_MULTI_CHOICE,\n    uuid,\n    answerId\n  }\n}\n\n/**\n * @param {string} uuid - the uuid of the multiChoiceActivity\n */\nexport function revealAnswers (uuid) {\n  return {\n    type: REVEAL_ANSWERS,\n    activityType: ACTIVITY_TYPE_MULTI_CHOICE,\n    uuid\n  }\n}\n\n","import { switchMap } from 'rxjs/operators'\nimport { of, EMPTY } from 'rxjs'\nimport { ofType, combineEpics } from 'redux-observable'\n\nimport {\n  CHOOSE_ANSWER,\n  REVEAL_ANSWERS\n} from '../constants/multiChoiceActivity.constants.js'\n\nimport { revealAnswers } from '../actions/multiChoiceActivity.action.js'\nimport { completeActivity } from '../actions/activity.action.js'\n\nexport function revealAnswersEpic (action$, state$) {\n  return action$.pipe(\n    ofType(CHOOSE_ANSWER),\n    switchMap((action) => {\n      let answers = Object.values(state$.value.activity.byUuid[action.uuid].answers)\n      answers = answers.filter((a) => !a.choosen && a.id !== action.answerId)\n      const correctNotChoose = answers.filter((a) => a.correct)\n      if (correctNotChoose.length < 1) {\n        return of(revealAnswers(action.uuid))\n      }\n      const wrongNotChoose = answers.filter((a) => !a.correct)\n      if (wrongNotChoose.length < 1) {\n        return of(revealAnswers(action.uuid))\n      }\n      return EMPTY\n    })\n  )\n}\n\nexport function completeMultiChoiceActivityEpic (action$, state$) {\n  return action$.pipe(\n    ofType(REVEAL_ANSWERS),\n    switchMap((action) => of(completeActivity(action.uuid)))\n  )\n}\n\nexport default combineEpics(\n  revealAnswersEpic,\n  completeMultiChoiceActivityEpic\n)\n","import { switchMap } from 'rxjs/operators'\nimport { of, EMPTY } from 'rxjs'\nimport { ofType, combineEpics } from 'redux-observable'\n\nimport { OPEN_TEXT } from '../constants/textActivity.constants.js'\n\nimport { completeActivity } from '../actions/activity.action.js'\n\nexport function completeTextActivityEpic (action$, state$) {\n  return action$.pipe(\n    ofType(OPEN_TEXT),\n    switchMap((action) => {\n      if (!state$.value.activity.byUuid[action.uuid].completed) {\n        return of(completeActivity(action.uuid))\n      }\n      return EMPTY\n    })\n  )\n}\n\nexport default combineEpics(\n  completeTextActivityEpic\n)\n","/**\n * @throws JSON Parse\n * @param {string} url - url to fetch json data from\n * @return {Object} - JS Object from JSON files\n */\nexport async function fetchJSON (url, params = {}) {\n  /** MOCK LOAD ACTIVITES */\n  if (url === process.env.PUBLIC_URL + '/json/activities.json') {\n    return mockFetchActivities(params)\n  }\n  const request = {\n    headers: {\n      Accept: 'application/json'\n    },\n    method: 'GET'\n  }\n  const response = await window.fetch(url, request)\n  const data = await response.json()\n  /** MOCK only loading trails stations. Needs some kind of api */\n  if ('uuids' in params) {\n    return data.filter(s => params.uuids.includes(s.uuid))\n  }\n  return data\n}\n\nasync function mockFetchActivities ({ uuids }) {\n  const request = {\n    headers: {\n      Accept: 'application/json'\n    },\n    method: 'GET'\n  }\n  const activities = [\n    process.env.PUBLIC_URL + '/json/textActivity.json',\n    process.env.PUBLIC_URL + '/json/multiChoiceActivity.json'\n  ]\n  const resposnes = await Promise.all(\n    activities.map(activityUrl => window.fetch(activityUrl, request))\n  )\n  const data = await Promise.all(\n    resposnes.map(r => r.json())\n  )\n\n  return data.flat().filter(s => uuids.includes(s.uuid))\n}\n","import { combineEpics, createEpicMiddleware } from 'redux-observable'\nimport trailsEpics from './trails.epics.js'\nimport stationEpics from './station.epics.js'\nimport activityEpics from './activity.epics.js'\nimport mulitChoiceActivityEpics from './multiChoiceActivity.epics.js'\nimport textActivityEpics from './textActivity.epics.js'\n\n/* DEPENDENCIES */\nimport { fetchJSON } from '../utils/api.js'\n\nconst rootEpic = combineEpics(\n  trailsEpics,\n  stationEpics,\n  activityEpics,\n  mulitChoiceActivityEpics,\n  textActivityEpics\n)\n\nexport const configureEpicMiddleware = () => createEpicMiddleware({\n  dependencies: {\n    fetchJSON\n  }\n})\n\nexport default rootEpic\n","import { createBrowserHistory } from 'history'\nimport { applyMiddleware, compose, createStore } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\n\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nimport createRootReducer, { initialState } from './reducers/root.reducer.js'\nimport rootEpic, { configureEpicMiddleware } from './epics/root.epic.js'\n\nexport const history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL\n})\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose\n\nexport default function configureStore (preloadedState = initialState) {\n\n  let rootReducer, persistor\n\n  if (process.env && process.env.NODE_ENV === 'production') {\n    const persistConfig = {\n      key: 'root',\n      storage,\n      blacklist: ['router']\n    }\n\n    rootReducer = persistReducer(persistConfig, createRootReducer(history))\n  } else {\n    rootReducer = createRootReducer(history)\n  }\n\n  const epicMiddleware = configureEpicMiddleware()\n\n  const middlewares = [\n    epicMiddleware,\n    routerMiddleware(history)\n  ]\n\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    composeEnhancers(\n      applyMiddleware(...middlewares)\n    )\n  )\n\n  epicMiddleware.run(rootEpic)\n\n  if (process.env && process.env.NODE_ENV === 'production') {\n    persistor = persistStore(store)\n  }\n\n  return { store, persistor }\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M51.829 27.231L39.016 47.485l3.79 1.896-7.56 11.117 6.371.455-8.821 15.68 5.257 3.346-14.276 20.492 7.097 1.978-12.376 18.977 5.14 1.87-9.575 15.046 5.983.5-17.234 20.27 10.016 2.75 31.366 2.43-1.009 11.677h17.192l-1.005-11.629 31.041-3.654 11.164.688-17.972-22.54 5.894-.492-9.574-15.046 5.156-1.876-13.468-21.162 7.862-.232L65.51 79.98l5.224-3.326-7.827-12.925 5.725-2.634-9.45-12.562 4.894-1.253-6.933-7.974 1.55-2.204zm167.607.099l-12.54 19.823 3.71 1.856-7.398 10.88 6.234.444-8.633 15.345 5.145 3.274-13.97 20.055 6.945 1.936-12.114 18.573 5.03 1.829-9.37 14.726 5.856.488-16.866 19.84 9.803 2.69 30.697 2.377-.989 11.428h16.825l-.984-11.38 30.38-3.578 10.925.674-17.588-22.058 5.769-.48-9.371-14.727 5.047-1.835-13.18-20.711 7.693-.227-13.668-19.62 5.113-3.255-7.66-12.65 5.604-2.576-9.25-12.294 4.79-1.226-6.785-7.804 1.517-2.157zm-20.19 11.522l-1.963 2.825.57.812-2.26 2.6 1.7.435-3.43 4.558 2 .92-2.819 4.654 1.884 1.199-.85 1.218 1.32 2.087-2.476 1.239 5.596 8.23-4.513.322 3.63 6.454 7.841-13.94-6.614-.472 5.607-8.245-2.196-3.906 2.21-.158-2.568-3.775 1.365-.683zm-99.699 3.444l-1.964 2.825.571.812-2.261 2.6 1.7.436-3.43 4.557 2 .92-2.818 4.655 1.883 1.2-.651.934 5.902 9.328-1.667.834 2.15 3.16 1.46-2.41-2.18-1.002 3.173-4.217-1.893-.485 3.165-3.64-.492-.7.496-.712-.76-1.09 1.905-1.214-3.264-5.8 2.21-.158-2.567-3.776 1.365-.682zm84.933 3.68l-4.583 6.592 1.035 1.472-4.63 5.325 3.269.836-6.312 8.389 3.824 1.759-1.36 2.246-.414.683-3.452 5.702 3.488 2.22-6.969 10.004-2.357 3.384 2.768.082-.247-.355.778-.6-.04.131.61-.471-.004-.007-.18.05.136-.106 1.211 1.424.217.006-2.065 3.245-.009.015-6.919 10.872 3.444 1.252-6.394 10.048 3.936.328-12 15.05 7.453-.458 20.026 2.358 9.461-14.868-5.063-1.842 11.976-18.361-7.05-1.966 9.501-13.637-3.886-5.579 3.51-2.234-5.89-10.47 4.253-.303-5.048-7.424 2.532-1.266-2.013-3.183-.219-.139.064-.105zm-33.151 1.757l-1.964 2.825.57.812-2.26 2.6 1.7.435-3.43 4.558 2 .92-2.819 4.655 1.884 1.198-4.465 6.41.284.503 2.146.063-1.12 1.762.078.138-.28.178-1.366 2.148 5.526 7.932 2.77-4.575-2.736-1.259 4.054-5.388-2.372-.607 3.888-4.473-.633-.901 1.892-2.722 1.757-2.527-2.079-3.695 2.21-.157-2.567-3.776 1.365-.682zm-70.36 3.065l-1.683 2.42.521.742L77.8 56.27l1.532.392-3.12 4.147 1.804.83-2.561 4.229 1.711 1.09-4.318 6.197 2.503.074-1.954 3.07.69 1.139-2.377 1.513-.828 1.3 1.666.607-1.635 2.57 7.274 10.442.25.03 2.183-3.134-1.55.095 4.915-6.162-1.688-1.074 3.433-5.67-2.736-1.258 4.054-5.388-2.373-.607 1.538-1.77-1.376-1.975 1.733-1.103-2.982-5.3 1.991-.143-2.3-3.384 1.238-.62zm38.897.953l-1.964 2.825.571.813-2.261 2.6 1.7.435-3.43 4.558 2 .92-2.502 4.131.869 1.278.698.443-.2.288.546.804.474.697-2.173.155-.171.245 2.628 4.672-1.772 1.129 4.654 6.68 5.833-8.372-2.285-1.454 2.113-3.489-.944-1.354 1.704-1.085-2.176-1 1.079-1.435-1.966-3.493 2.21-.158-2.566-3.775 1.364-.683zm13.62.57l-2.765 3.975.713 1.013-2.985 3.433 2.18.558-3.812 5.066-.498.662 1.175.54 1.381.637-.53.876.006.013-.023.015-1.174 1.938-1.833 3.027 2.374 1.511-6.185 8.879 3.526.104-4.445 6.985-.683 1.072-1.027 1.615 2.329.847-4.266 6.704 2.72.226-5.11 6.41-2.68 3.36.193.303 4.01-.247 14.3 1.684-.452 5.22h7.184l-.454-5.253 2.308-.178 3.83-6.017-2.33-.848 5.702-8.96-3.673-.107 3.5-5.023.476-.685-3.93-6.026 3.194-.89-6.391-9.175 2.395-1.524-4.066-7.228 2.834-.202-3.325-4.89 1.721-.861zm-25.32 6.952l-.187.27.054.095-.217.139-1.614 2.32.571.813-2.261 2.6 1.7.435-3.43 4.558 2 .92-2.804 4.63.042.061 1.827 1.163-2.366 3.396 1.668 2.965-1.588 1.01-.465.731 6.526 9.369-3.265.91 5.511 8.45-2.34.85 3.212 5.047-.252-2.913 3.225-.25 2.745-3.442-2.362-.196 4.627-7.271-2.329-.848 2.528-3.972-3.877-5.945 2.514-.7-5.01-7.191 1.906-1.213-2.371-4.214-.893-1.586 2.102-.15.108-.009-2.567-3.775 1.365-.682zm62.179 1.504l-1.964 2.825.57.812-2.26 2.6 1.699.436-3.429 4.558 2 .92-1.812 2.991 2.39 3.515-2.07.147-.59.846 3.123 5.55-1.515.965.505.795-.974.08 1.356 1.948 5.642-8.098-3.4-2.164 4.202-6.938-.45-.797.975-.07.38-.626-4.004-1.84 2.702-3.592zm-77.644.57l-2.764 3.975.713 1.013-2.985 3.433 2.18.558-4.31 5.728 2.556 1.176-3.554 5.87 2.374 1.511-4.197 6.025-1.988 2.854 3.526.104-2.987 4.694 2.833 4.067-5.524.162-.477.749 2.33.847-1.721 2.704 9.944 15.624.943.111-.451 5.22h7.184l-.455-5.252 14.408-1.115 4.097-1.125-5.4-6.353-.959.06.488-.612-.43-.506-1.548-1.82 2.78-.232-4.266-6.704 2.318-.843-5.605-8.594 3.194-.89-5.545-7.96-.236-.339-.934-1.34 1.006.03 1.713-1.09-.515-.916-.895-1.591-2.656-4.72 2.835-.203-3.326-4.89 1.722-.861zm64.853 2.34l-2.764 3.975.713 1.014-2.985 3.433 2.179.557-4.31 5.728 2.558 1.176-3.555 5.87 2.374 1.511-3.313 4.755-1.014 1.456-1.857 2.668 3.526.104-6.155 9.672 2.328.847-4.265 6.704.045.004.018.001 2.656.221-8.053 10.1 4.467-.274 14.3 1.683-.391 4.517 6-7.524-3.58-.298 6.756-10.616-3.444-1.252 7.46-11.722-.64-.982 1.537-.428.182-.286-5.395-.159 2.757-3.958.683-.98-2.962-4.253.852-.542.648-.413.694-.442.201-.128-4.066-7.227 2.834-.203-3.324-4.89 1.72-.86zm40.177 12.887l1.655 2.943-3.377 2.15 2.558 3.673 3.974-5.704zm-97.014.66l-1.126.08.994 1.768.932-1.338-.406-.259-.07.115-.19-.28zm17.779 8.679l-.848.236 2.243 3.44 2.205-3.463-3.673-.109zm28.772.126l-2.127.593 2.341 3.589 1.953-2.803zm-68.234 9.046l1.212 1.741 1.066-1.674zm100.35 43.147l-.495 5.713 4.569-5.373z\",\n  fill: \"#173d10\"\n});\n\nvar SvgSimpleForest = function SvgSimpleForest(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 1024,\n    height: 768,\n    viewBox: \"0 0 270.933 203.2\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSimpleForest, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/simple-forest.4a77c0d8.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { ReactComponent as ForestSvg } from '../assets/simple-forest.svg'\n\nimport '../styles/noMatch.css'\n\nconst NoMatch = () => {\n  return (\n    <div className='page--404'>\n      <h1>Das war die Falsche Abzweigung</h1>\n      <ForestSvg />\n      <p>Du scheinst dich ein wenig im Wald verrirrt zu haben. Diese Seite exisitiert leider nicht.</p>\n      <p>Geh doch einfach nochmal eine Seite zurück und versuchs mit einer anderen Abzweigung.</p>\n    </div>\n  )\n}\n\nexport default NoMatch\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\n\nimport '../styles/trailItem.scss'\n\nfunction TrailItem ({\n  uuid,\n  name,\n  stations,\n  description,\n  onStartTrail,\n  onLoadStations\n}) {\n  return (\n    <li className='trail_item'>\n      <header>\n        <h2>{name}</h2>\n      </header>\n      <div className='trail_item__content'>\n        <ReactMarkdown source={description} />\n      </div>\n      <div className='trail_item__toolbar'>\n        <button onClick={(e) => onStartTrail(uuid)}>Trail Starten</button>\n        <button onClick={(e) => onLoadStations(stations)}>Stationen herunterladen</button>\n      </div>\n    </li>\n  )\n}\n\nTrailItem.propTypes = {\n  uuid: PropTypes.string,\n  name: PropTypes.string,\n  description: PropTypes.string,\n  onStartTrail: PropTypes.func\n}\n\nexport default TrailItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport '../styles/dialog.scss'\n\nexport default function Dialog ({ title, open, tools, children }) {\n  let dialogClasses = 'dialog'\n  if (!open) {\n    dialogClasses += ' dialog--closed'\n    return <div className={dialogClasses} />\n  }\n  return (\n    <div className={dialogClasses}>\n      <div className='box'>\n        <header>\n          <h2>{title}</h2>\n        </header>\n        <div className='box__content'>\n          {children}\n        </div>\n        <footer className='box__toolbar'>\n          {tools}\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nDialog.propTypes = {\n  title: PropTypes.string,\n  open: PropTypes.bool,\n  tools: PropTypes.node,\n  children: PropTypes.node\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport TrailItem from './trailItem.js'\nimport Dialog from './dialog.js'\n\nimport '../styles/trailList.css'\n\nconst TrailsList = ({\n  trails,\n  error,\n  onStartTrail,\n  onStartTrailAccept,\n  onStartTrailCancel,\n  onLoadStations\n}) => {\n  let errorDialog = ''\n  if (error !== undefined) {\n    const dialogToolbar = [\n      (\n        <button\n          key='c'\n          onClick={onStartTrailCancel}\n        >\n          Abbrechen\n        </button>),\n      (\n        <button\n          key='o'\n          onClick={() => onStartTrailAccept(error.selectedTrail.uuid)}\n        >\n        Trail {error.selectedTrail.name} Starten\n        </button>)\n    ]\n    errorDialog = (\n      <Dialog title='Achtung' open={error !== undefined} tools={dialogToolbar}>\n        <p>Der Trail {error.currentTrail.name} läuft bereits</p>\n        <p>Willst du wirklich einen neuen Trail starten</p>\n      </Dialog>\n    )\n  }\n  return (\n    <section className='page--trails_list'>\n      {errorDialog}\n      <ul className='trails_list no_list_style'>\n        {trails.map(\n          (trail) =>\n            <TrailItem\n              key={trail.uuid}\n              onStartTrail={onStartTrail}\n              onLoadStations={onLoadStations}\n              {...trail}\n            />\n        )}\n      </ul>\n    </section>\n  )\n}\n\nTrailsList.propTypes = {\n  trails: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      description: PropTypes.string,\n      uuid: PropTypes.string\n    })\n  ),\n  error: PropTypes.object,\n  onStartTrail: PropTypes.func,\n  onStartTrailAccept: PropTypes.func,\n  onStartTrailCancel: PropTypes.func,\n  onLoadStations: PropTypes.func\n}\n\nexport default TrailsList\n","import { connect } from 'react-redux'\nimport TrailsList from '../components/trailsList.js'\nimport { getTrailsList } from '../selectors/trails.selectors.js'\nimport { startTrail, cancelStartTrail, acceptStartTrail } from '../actions/trails.action.js'\nimport { loadStations } from '../actions/station.action.js'\n\nconst mapStateToProps = state => {\n  return {\n    trails: getTrailsList(state),\n    error: (state.trails.error !== undefined ? {\n      currentTrail: state.trails.byUuid[state.trails.current_trail],\n      selectedTrail: state.trails.byUuid[state.trails.error.selected_trail]\n    } : undefined)\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onStartTrail: (uuid) => dispatch(startTrail(uuid)),\n    onStartTrailCancel: () => dispatch(cancelStartTrail()),\n    onStartTrailAccept: (uuid) => dispatch(acceptStartTrail(uuid)),\n    onLoadStations: (stations) => dispatch(loadStations(stations))\n  }\n}\n\nconst TrailsListContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrailsList)\n\nexport default TrailsListContainer\n","import { connect } from 'react-redux'\n\nimport TextActivityComponent from '../components/textActivity.js'\n\nimport { getActivity } from '../selectors/activity.selectors.js'\n\nimport { openText, closeText } from '../actions/textActivity.action.js'\n\nfunction mapStateToProps (state, props) {\n  return {\n    activity: getActivity(state, props)\n  }\n}\n\nfunction mapDispatchTopProps (dispatch) {\n  return {\n    onReadText: (uuid) => dispatch(openText(uuid)),\n    onCloseText: (uuid) => dispatch(closeText(uuid))\n\n  }\n}\n\nconst TextActivity = connect(\n  mapStateToProps,\n  mapDispatchTopProps\n)(TextActivityComponent)\n\nexport default TextActivity\n","import {\n  OPEN_TEXT,\n  CLOSE_TEXT\n} from '../constants/textActivity.constants.js'\nimport { ACTIVITY_TYPE_TEXT } from '../constants/activity.constants.js'\n\n/**\n * @param {string} uuid - the uuid of the text activity to open\n */\nexport function openText (uuid) {\n  return {\n    type: OPEN_TEXT,\n    uuid,\n    activityType: ACTIVITY_TYPE_TEXT\n  }\n}\n\n/**\n * @param {string} uuid - the uuid of the text activity to close\n */\nexport function closeText (uuid) {\n  return {\n    type: CLOSE_TEXT,\n    uuid,\n    activityType: ACTIVITY_TYPE_TEXT\n  }\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\n\nimport CorrectSymbol from '../assets/correct.svg'\n\nimport '../styles/textActivity.scss'\n\nexport default function TextActivity ({\n  activity,\n  onReadText,\n  onCloseText\n}) {\n  let contentClass = 'text_activity__content'\n  let button = (\n    <button\n      id={'open_text--' + activity.uuid}\n      onClick={() => onReadText(activity.uuid)}\n    >\n    Text öffnen\n    </button>\n  )\n  if (activity.open) {\n    contentClass += ' text_activity__content--open'\n    button = (\n      <button\n        id={'close_text--' + activity.uuid}\n        onClick={() => onCloseText(activity.uuid)}\n      >\n      Text schließen\n      </button>\n    )\n  }\n  return (\n    <section className='activity text_activity'>\n      <h2>{activity.name} {activity.completed ? <img src={CorrectSymbol} alt='completed' /> : ''}</h2>\n      <div className={contentClass}>\n        {(activity.open ? <ReactMarkdown source={activity.text} /> : '')}\n      </div>\n      <div className='text_activity__tools'>\n        {button}\n      </div>\n    </section>\n  )\n}\n\nTextActivity.propTypes = {\n  activity: PropTypes.shape({\n    text: PropTypes.string,\n    uuid: PropTypes.string,\n    open: PropTypes.bool,\n    name: PropTypes.string\n  }),\n  onReadText: PropTypes.func,\n  onCloseText: PropTypes.func\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport CorrectSymbol from '../assets/correct.svg'\n\nimport '../styles/multiChoiceActivity.scss'\n\nfunction MultiChoiceAnswer ({ id, text, onClick, reveal, choosen, correct }) {\n  let classes = 'multi_choice_answer'\n  if (choosen) {\n    classes += ' multi_choice_answer--choosen'\n    if (correct) {\n      classes += ' multi_choice_answer--correct'\n    } else {\n      classes += ' multi_choice_answer--wrong'\n    }\n  } else if (reveal) {\n    classes += ' multi_choice_answer--reveal'\n    if (correct) {\n      classes += ' multi_choice_answer--reveal_correct'\n    } else {\n      classes += ' multi_choice_answer--reveal_wrong'\n    }\n  }\n  return (\n    <button\n      onClick={() => onClick(id)}\n      className={classes}\n    >\n      {text}\n      <span />\n    </button>\n  )\n}\nMultiChoiceAnswer.propTypes = {\n  text: PropTypes.string,\n  id: PropTypes.string,\n  choosen: PropTypes.bool,\n  correct: PropTypes.bool,\n  reveal: PropTypes.bool,\n  onClick: PropTypes.func\n}\n\nexport default function MultiChoiceActivity ({\n  activity,\n  onChooseAnswer\n}) {\n  function onAnswerClicked (id) {\n    if (!activity.reveal && !activity.answers[id].choosen) {\n      onChooseAnswer(activity.uuid, id)\n    }\n  }\n  return (\n    <section className='activity multi_choice_activity'>\n      <h2>{activity.name} {activity.completed ? <img src={CorrectSymbol} alt='completed' /> : ''}</h2>\n      <div className='multi_choice_activity__question'>\n        {activity.question}\n      </div>\n      <div className='multi_choice_activity__answers'>\n        {Object.values(activity.answers).map(a => <MultiChoiceAnswer key={a.id} reveal={activity.reveal} {...a} onClick={onAnswerClicked} />)}\n      </div>\n    </section>\n  )\n}\n\nMultiChoiceActivity.propTypes = {\n  activity: PropTypes.shape({\n    question: PropTypes.string,\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    answers: PropTypes.object\n  }),\n  onChooseAnswer: PropTypes.func\n}\n","import { connect } from 'react-redux'\n\nimport MultiChoiceActivityComponent from '../components/multiChoiceActivity.js'\n\nimport { chooseAnswer } from '../actions/multiChoiceActivity.action.js'\n\nimport { getActivity } from '../selectors/activity.selectors.js'\n\nfunction mapStateToProps (state, props) {\n  return {\n    activity: getActivity(state, props)\n  }\n}\n\nfunction mapDispatchTopProps (dispatch) {\n  return {\n    onChooseAnswer: (uuid, answerId) => dispatch(chooseAnswer(uuid, answerId))\n  }\n}\n\nconst MultiChoiceActivity = connect(\n  mapStateToProps,\n  mapDispatchTopProps\n)(MultiChoiceActivityComponent)\n\nexport default MultiChoiceActivity\n","import { connect } from 'react-redux'\n\nimport { getActivityType } from '../selectors/activity.selectors.js'\n\nimport ActitityWrapper from '../components/activityWrapper.js'\n\nfunction mapStateToProps (state, props) {\n  return {\n    activityType: getActivityType(state, props)\n  }\n}\n\nfunction mapDispatchTopProps (dispatch) {\n  return {\n\n  }\n}\n\nconst Activity = connect(\n  mapStateToProps,\n  mapDispatchTopProps\n)(ActitityWrapper)\n\nexport default Activity\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n  ACTIVITY_TYPE_TEXT,\n  ACTIVITY_TYPE_MULTI_CHOICE\n} from '../constants/activity.constants.js'\n\nimport TextActivity from '../containers/textActivity.container.js'\n\nimport MultiChoiceActivity from '../containers/multiChoiceActivity.container.js'\n\nimport '../styles/activity.scss'\n\nexport default function ActitityWrapper ({ activityType, uuid }) {\n  switch (activityType) {\n    case ACTIVITY_TYPE_TEXT:\n      return (<TextActivity uuid={uuid} />)\n    case ACTIVITY_TYPE_MULTI_CHOICE:\n      return (<MultiChoiceActivity uuid={uuid} />)\n    default:\n      return (<div>TODO</div>)\n  }\n}\n\nActitityWrapper.propTypes = {\n  activityType: PropTypes.string.isRequired,\n  uuid: PropTypes.string.isRequired\n}\n","import { createSelector } from 'reselect'\n\nfunction selectStation (state, { uuid }) {\n  return state.station.byUuid[uuid]\n}\n\nexport const getStation = createSelector(\n  [selectStation],\n  (station) => station\n)\n","import { connect } from 'react-redux'\n\nimport StationViewComponent from '../components/stationView.js'\n\nimport { getStation } from '../selectors/station.selectors.js'\n\nimport { completeStationStart } from '../actions/station.action.js'\n\nfunction mapStateToProps (state, props) {\n  return {\n    station: getStation(state, props),\n    ...props\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {\n    onCompleteStation: (uuid) => dispatch(completeStationStart(uuid))\n  }\n}\n\nconst StationView = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(StationViewComponent)\n\nexport default StationView\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ReactMarkdown from 'react-markdown'\n\nimport Activity from '../containers/activityWrapper.container.js'\n\nimport '../styles/stationView.scss'\n\nexport default function StationView ({\n  station,\n  onCompleteStation,\n  isLastStation\n}) {\n  return (\n    <div className='box station'>\n      <header>\n        <h2>{station.name}</h2>\n      </header>\n      <div className='box__content station__description'>\n        <ReactMarkdown source={station.description} />\n      </div>\n      <div className='box__content station__activities'>\n        {\n          station.activities\n            ? station.activities.map(uuid => <Activity key={uuid} uuid={uuid} />)\n            : ''\n        }\n      </div>\n      <footer className='box__toolbar'>\n        {\n          isLastStation\n            ? (<button>Trail beenden (macht noch nix)</button>)\n            : (<button onClick={() => onCompleteStation(station.uuid)}>Zur nächsten Station</button>)\n        }\n      </footer>\n    </div>\n  )\n}\n\nStationView.propTypes = {\n  station: PropTypes.shape({\n    uuid: PropTypes.string,\n    name: PropTypes.string,\n    description: PropTypes.string,\n    activities: PropTypes.array\n  }).isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport StationView from '../containers/stationView.container.js'\n\nimport '../styles/stationList.scss'\n\nexport default function StationList ({ stations, currentStation }) {\n  let stationViews\n  if (stations.length > 0) {\n    stationViews = stations.map((station, i) => {\n      return (\n        <li className='station_list__item' key={station}>\n          {i > currentStation ? '' : <StationView uuid={station} isLastStation={i+1 === stations.length} />}\n        </li>\n      )\n    })\n  } else {\n    stationViews = <p>Keine Stationen geladen</p>\n  }\n  return (\n    <ul className='station_list no_list_style'>\n      {stationViews}\n    </ul>\n  )\n}\n\nStationList.propTypes = {\n  stations: PropTypes.arrayOf(PropTypes.string)\n}\n","import { connect } from 'react-redux'\nimport TrailView from '../components/trailView.js'\nimport { getCurrentTrail } from '../selectors/trails.selectors.js'\n\nfunction mapStateToProps (state) {\n  return {\n    trail: getCurrentTrail(state),\n    currentStation: state.trails.currentStation\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return {}\n}\n\nconst CurrentTrail = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TrailView)\n\nexport default CurrentTrail\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Redirect } from 'react-router'\nimport StationList from './stationList.js'\n\nimport '../styles/trailView.scss'\n\nexport default function TrailView ({ trail, currentStation }) {\n  if (trail === undefined) {\n    return <Redirect to='/trails' />\n  }\n  return (\n    <div className='trail_view'>\n      <header className='trail_view__header'>\n        <h1>{trail.name}</h1>\n      </header>\n      <section className='trail_view__stations'>\n        <StationList stations={trail.stations} currentStation={currentStation} />\n      </section>\n    </div>\n  )\n}\n\nTrailView.propTypes = {\n  trail: PropTypes.shape({\n    name: PropTypes.string,\n    description: PropTypes.string,\n    uuid: PropTypes.string,\n    stations: PropTypes.arrayOf(PropTypes.string)\n  })\n}\n","import React from 'react'\nimport { Route, Switch } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport '../styles/app.scss'\nimport NoMatch from './noMatch.js'\nimport TrailsListContainer from '../containers/trailslist.container.js'\nimport CurrentTrail from '../containers/currentTrail.container.js'\n\nfunction dummyFrontPage (clearButton) {\n  return (\n    <div className='dummy_front_page'>\n      <Link to='/trails'>GOTO Trails</Link>\n      <Link to='/mytrail'>GOTO Current Trail</Link>\n      {clearButton || ''}\n    </div>\n  )\n}\n\nfunction App ({ clearButton }) {\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <Link to='/'>SENSO-Trail App</Link>\n      </header>\n      <main>\n        <Switch>\n          <Route exact path='/' render={() => dummyFrontPage(clearButton)} />\n          <Route exact path='/trails' component={TrailsListContainer} />\n          <Route exact path='/mytrail' component={CurrentTrail} />\n          <Route component={NoMatch} />\n        </Switch>\n      </main>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport configureStore, { history } from './createStore.js'\nimport './styles/index.scss'\nimport App from './components/app.js'\nimport * as serviceWorker from './serviceWorker'\n\n// For now only. Needs to be some sort of init action later\nimport { loadTrails } from './actions/trails.action.js'\n\nconst { store, persistor } = configureStore()\n\nfunction clearCaches () {\n  console.log('START CLEARING')\n  Promise.all([\n    window.caches.keys()\n      .then((names) => {\n        for (const name of names) {\n          window.caches.delete(name)\n        }\n      })\n      .then(() => { console.log('Service Worker cleared') }),\n    persistor.purge().then(() => {\n      console.log('Persist store cleared')\n    })\n  ]).then(() => {\n    console.log('all caches cleared')\n    window.location.reload()\n  })\n}\n\nstore.dispatch(loadTrails())\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nif (process.env && process.env.NODE_ENV === 'production') {\n  const clearCachesButton = (\n    <button onClick={clearCaches}>Clear Caches</button>\n  )\n  ReactDOM.render(\n    <Provider store={store}>\n      <ConnectedRouter history={history} basename={process.env.PUBLIC_URL}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App clearButton={clearCachesButton} />\n        </PersistGate>\n      </ConnectedRouter>\n    </Provider>\n    , document.getElementById('root'))\n  console.log('prod env')\n  serviceWorker.register()\n} else {\n  ReactDOM.render(\n    <Provider store={store}>\n      <ConnectedRouter history={history} basename={process.env.PUBLIC_URL}>\n        <App />\n      </ConnectedRouter>\n    </Provider>\n    , document.getElementById('root'))\n  serviceWorker.unregister()\n}\n","module.exports = __webpack_public_path__ + \"static/media/correct.101c9dab.svg\";"],"sourceRoot":""}